<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Yi's Blog - Do. Or do not. There is no try</title><link href="http://www.yilaguan.cc/" rel="alternate"></link><link href="http://www.yilaguan.cc/feeds/salt.atom.xml" rel="self"></link><id>http://www.yilaguan.cc/</id><updated>2016-08-12T00:00:00+08:00</updated><entry><title>salt REQ 数据传输</title><link href="http://www.yilaguan.cc/posts/2016/08/12/salt-req-shu-ju-chuan-shu.html" rel="alternate"></link><published>2016-08-12T00:00:00+08:00</published><author><name>YiHan</name></author><id>tag:www.yilaguan.cc,2016-08-12:posts/2016/08/12/salt-req-shu-ju-chuan-shu.html</id><summary type="html">&lt;h2&gt;/u01/github/salt-develop/salt/transport/zeromq.py : class AsyncZeroMQReqChannel&lt;/h2&gt;
&lt;p&gt;这是ZEROMQ的一个底层封装程序,实现了单例模式,ZEROMQ REQ/REP 模式中的 REQ send 方法, REQ/REP 是一个低效的,类似于socket 的通讯模式, 发起一次REQ,等待一个REP,
不会进行多次消息交互,给salt用还是挺合理的,发送一个命令给minion, minion 返回一个执行结果。 原始的REQ/REP不支持异步,通过使用tornado实现异步操作。&lt;/p&gt;
&lt;h3&gt;单例:&lt;/h3&gt;
&lt;p&gt;首先是根据 io_loop, io_loop如果为空,则使用zmq自带的tornado, ioloop&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;io_loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;io_loop&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;io_loop&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eventloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ioloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;io_loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ioloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IOLoop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;io_loop&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_map&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;io_loop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;weakref&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WeakValueDictionary&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;loop_instance_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;io_loop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pki_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;     &lt;span class="c1"&gt;# where the keys are stored&lt;/span&gt;
                &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;          &lt;span class="c1"&gt;# minion ID&lt;/span&gt;
                &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;master_uri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;master_uri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;  &lt;span class="c1"&gt;# master ID&lt;/span&gt;
                &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;crypt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;aes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="c1"&gt;# TODO: use the same channel for crypt&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;核心对象:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AsyncReqMessageClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;master_uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                    &lt;span class="n"&gt;io_loop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_io_loop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;核心方法(这里不考虑权限):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nd"&gt;@tornado.gen.coroutine&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_uncrypted_transfer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tries&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;        Send a load across the wire in cleartext&lt;/span&gt;

&lt;span class="sd"&gt;        :param dict load: A load to send across the wire&lt;/span&gt;
&lt;span class="sd"&gt;        :param int tries: The number of times to make before failure&lt;/span&gt;
&lt;span class="sd"&gt;        :param int timeout: The number of seconds on a response before failing&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_package_load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;tries&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tries&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;/u01/github/salt-develop/salt/transport/zeromq.py : class AsyncReqMessageClient&lt;/h2&gt;
&lt;p&gt;_init_socket&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 使用REQ&lt;/span&gt;
&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REQ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 启用异步&lt;/span&gt;
&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zmq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eventloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zmqstream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ZMQStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;io_loop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io_loop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@tornado.gen.coroutine&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_internal_send_recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_queue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_queue&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_future_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# Timedout&lt;/span&gt;
            &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_queue&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;

        &lt;span class="c1"&gt;# 设置on_recv方法, 收到消息,调用 future.set_result&lt;/span&gt;
        &lt;span class="c1"&gt;# send&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mark_future&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serial&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="n"&gt;future&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on_recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mark_future&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 返回future&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# pylint: disable=W0702&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_init_socket&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# re-init the zmq socket (no other way in zmq)&lt;/span&gt;
            &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_queue&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_queue&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_future_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove_message_timeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Salt"></category></entry><entry><title>salt default opts</title><link href="http://www.yilaguan.cc/posts/2016/08/10/salt-default-opts.html" rel="alternate"></link><published>2016-08-10T00:00:00+08:00</published><author><name>YiHan</name></author><id>tag:www.yilaguan.cc,2016-08-10:posts/2016/08/10/salt-default-opts.html</id><summary type="html">&lt;p&gt;/u01/github/salt-develop/salt/config/&lt;strong&gt;init&lt;/strong&gt;.py &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;_DFLT_LOG_DATEFMT = &amp;#39;%H:%M:%S&amp;#39;
_DFLT_LOG_DATEFMT_LOGFILE = &amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;
_DFLT_LOG_FMT_CONSOLE = &amp;#39;[%(levelname)-8s] %(message)s&amp;#39;
_DFLT_LOG_FMT_LOGFILE = (
    &amp;#39;%(asctime)s,%(msecs)03d [%(name)-17s][%(levelname)-8s][%(process)d] %(message)s&amp;#39;
)

if salt.utils.is_windows():
    # Since an &amp;#39;ipc_mode&amp;#39; of &amp;#39;ipc&amp;#39; will never work on Windows due to lack of
    # support in ZeroMQ, we want the default to be something that has a
    # chance of working.
    _DFLT_IPC_MODE = &amp;#39;tcp&amp;#39;
    _MASTER_TRIES = -1
else:
    _DFLT_IPC_MODE = &amp;#39;ipc&amp;#39;
    _MASTER_TRIES = 1

FLO_DIR = os.path.join(
        os.path.dirname(os.path.dirname(__file__)),
        &amp;#39;daemons&amp;#39;, &amp;#39;flo&amp;#39;)

# default configurations
DEFAULT_MINION_OPTS = {
    &amp;#39;interface&amp;#39;: &amp;#39;0.0.0.0&amp;#39;,
    &amp;#39;master&amp;#39;: &amp;#39;salt&amp;#39;,
    &amp;#39;master_type&amp;#39;: &amp;#39;str&amp;#39;,
    &amp;#39;master_uri_format&amp;#39;: &amp;#39;default&amp;#39;,
    &amp;#39;master_port&amp;#39;: 4506,
    &amp;#39;master_finger&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;master_shuffle&amp;#39;: False,
    &amp;#39;master_alive_interval&amp;#39;: 0,
    &amp;#39;master_failback&amp;#39;: False,
    &amp;#39;master_failback_interval&amp;#39;: 0,
    &amp;#39;verify_master_pubkey_sign&amp;#39;: False,
    &amp;#39;always_verify_signature&amp;#39;: False,
    &amp;#39;master_sign_key_name&amp;#39;: &amp;#39;master_sign&amp;#39;,
    &amp;#39;syndic_finger&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;user&amp;#39;: &amp;#39;root&amp;#39;,
    &amp;#39;root_dir&amp;#39;: salt.syspaths.ROOT_DIR,
    &amp;#39;pki_dir&amp;#39;: os.path.join(salt.syspaths.CONFIG_DIR, &amp;#39;pki&amp;#39;, &amp;#39;minion&amp;#39;),
    &amp;#39;id&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;cachedir&amp;#39;: os.path.join(salt.syspaths.CACHE_DIR, &amp;#39;minion&amp;#39;),
    &amp;#39;cache_jobs&amp;#39;: False,
    &amp;#39;grains_cache&amp;#39;: False,
    &amp;#39;grains_cache_expiration&amp;#39;: 300,
    &amp;#39;grains_deep_merge&amp;#39;: False,
    &amp;#39;conf_file&amp;#39;: os.path.join(salt.syspaths.CONFIG_DIR, &amp;#39;minion&amp;#39;),
    &amp;#39;sock_dir&amp;#39;: os.path.join(salt.syspaths.SOCK_DIR, &amp;#39;minion&amp;#39;),
    &amp;#39;backup_mode&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;renderer&amp;#39;: &amp;#39;yaml_jinja&amp;#39;,
    &amp;#39;renderer_whitelist&amp;#39;: [],
    &amp;#39;renderer_blacklist&amp;#39;: [],
    &amp;#39;failhard&amp;#39;: False,
    &amp;#39;autoload_dynamic_modules&amp;#39;: True,
    &amp;#39;environment&amp;#39;: None,
    &amp;#39;pillarenv&amp;#39;: None,
    &amp;#39;pillar_opts&amp;#39;: False,
    # ``pillar_cache``, ``pillar_cache_ttl`` and ``pillar_cache_backend``
    # are not used on the minion but are unavoidably in the code path
    &amp;#39;pillar_cache&amp;#39;: False,
    &amp;#39;pillar_cache_ttl&amp;#39;: 3600,
    &amp;#39;pillar_cache_backend&amp;#39;: &amp;#39;disk&amp;#39;,
    &amp;#39;extension_modules&amp;#39;: os.path.join(salt.syspaths.CACHE_DIR, &amp;#39;minion&amp;#39;, &amp;#39;extmods&amp;#39;),
    &amp;#39;state_top&amp;#39;: &amp;#39;top.sls&amp;#39;,
    &amp;#39;state_top_saltenv&amp;#39;: None,
    &amp;#39;startup_states&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;sls_list&amp;#39;: [],
    &amp;#39;top_file&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;thorium_interval&amp;#39;: 0.5,
    &amp;#39;thorium_roots&amp;#39;: {
        &amp;#39;base&amp;#39;: [salt.syspaths.BASE_THORIUM_ROOTS_DIR],
        },
    &amp;#39;file_client&amp;#39;: &amp;#39;remote&amp;#39;,
    &amp;#39;use_master_when_local&amp;#39;: False,
    &amp;#39;file_roots&amp;#39;: {
        &amp;#39;base&amp;#39;: [salt.syspaths.BASE_FILE_ROOTS_DIR,
                 salt.syspaths.SPM_FORMULA_PATH]
    },
    &amp;#39;top_file_merging_strategy&amp;#39;: &amp;#39;merge&amp;#39;,
    &amp;#39;env_order&amp;#39;: [],
    &amp;#39;default_top&amp;#39;: &amp;#39;base&amp;#39;,
    &amp;#39;fileserver_limit_traversal&amp;#39;: False,
    &amp;#39;file_recv&amp;#39;: False,
    &amp;#39;file_recv_max_size&amp;#39;: 100,
    &amp;#39;file_ignore_regex&amp;#39;: [],
    &amp;#39;file_ignore_glob&amp;#39;: [],
    &amp;#39;fileserver_backend&amp;#39;: [&amp;#39;roots&amp;#39;],
    &amp;#39;fileserver_followsymlinks&amp;#39;: True,
    &amp;#39;fileserver_ignoresymlinks&amp;#39;: False,
    &amp;#39;pillar_roots&amp;#39;: {
        &amp;#39;base&amp;#39;: [salt.syspaths.BASE_PILLAR_ROOTS_DIR,
                 salt.syspaths.SPM_PILLAR_PATH]
    },
    &amp;#39;git_pillar_base&amp;#39;: &amp;#39;master&amp;#39;,
    &amp;#39;git_pillar_branch&amp;#39;: &amp;#39;master&amp;#39;,
    &amp;#39;git_pillar_env&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_root&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_ssl_verify&amp;#39;: True,
    &amp;#39;git_pillar_global_lock&amp;#39;: True,
    &amp;#39;git_pillar_user&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_password&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_insecure_auth&amp;#39;: False,
    &amp;#39;git_pillar_privkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_pubkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_passphrase&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_remotes&amp;#39;: [],
    &amp;#39;gitfs_mountpoint&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_root&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_base&amp;#39;: &amp;#39;master&amp;#39;,
    &amp;#39;gitfs_user&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_password&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_insecure_auth&amp;#39;: False,
    &amp;#39;gitfs_privkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_pubkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_passphrase&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_env_whitelist&amp;#39;: [],
    &amp;#39;gitfs_env_blacklist&amp;#39;: [],
    &amp;#39;gitfs_global_lock&amp;#39;: True,
    &amp;#39;gitfs_ssl_verify&amp;#39;: True,
    &amp;#39;gitfs_saltenv&amp;#39;: [],
    &amp;#39;hash_type&amp;#39;: &amp;#39;md5&amp;#39;,
    &amp;#39;disable_modules&amp;#39;: [],
    &amp;#39;disable_returners&amp;#39;: [],
    &amp;#39;whitelist_modules&amp;#39;: [],
    &amp;#39;module_dirs&amp;#39;: [],
    &amp;#39;returner_dirs&amp;#39;: [],
    &amp;#39;grains_dirs&amp;#39;: [],
    &amp;#39;states_dirs&amp;#39;: [],
    &amp;#39;render_dirs&amp;#39;: [],
    &amp;#39;outputter_dirs&amp;#39;: [],
    &amp;#39;utils_dirs&amp;#39;: [],
    &amp;#39;providers&amp;#39;: {},
    &amp;#39;clean_dynamic_modules&amp;#39;: True,
    &amp;#39;open_mode&amp;#39;: False,
    &amp;#39;auto_accept&amp;#39;: True,
    &amp;#39;autosign_timeout&amp;#39;: 120,
    &amp;#39;multiprocessing&amp;#39;: True,
    &amp;#39;mine_enabled&amp;#39;: True,
    &amp;#39;mine_return_job&amp;#39;: False,
    &amp;#39;mine_interval&amp;#39;: 60,
    &amp;#39;ipc_mode&amp;#39;: _DFLT_IPC_MODE,
    &amp;#39;ipv6&amp;#39;: False,
    &amp;#39;file_buffer_size&amp;#39;: 262144,
    &amp;#39;tcp_pub_port&amp;#39;: 4510,
    &amp;#39;tcp_pull_port&amp;#39;: 4511,
    &amp;#39;log_file&amp;#39;: os.path.join(salt.syspaths.LOGS_DIR, &amp;#39;minion&amp;#39;),
    &amp;#39;log_level&amp;#39;: &amp;#39;warning&amp;#39;,
    &amp;#39;log_level_logfile&amp;#39;: None,
    &amp;#39;log_datefmt&amp;#39;: _DFLT_LOG_DATEFMT,
    &amp;#39;log_datefmt_logfile&amp;#39;: _DFLT_LOG_DATEFMT_LOGFILE,
    &amp;#39;log_fmt_console&amp;#39;: _DFLT_LOG_FMT_CONSOLE,
    &amp;#39;log_fmt_logfile&amp;#39;: _DFLT_LOG_FMT_LOGFILE,
    &amp;#39;log_granular_levels&amp;#39;: {},
    &amp;#39;max_event_size&amp;#39;: 1048576,
    &amp;#39;test&amp;#39;: False,
    &amp;#39;ext_job_cache&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;cython_enable&amp;#39;: False,
    &amp;#39;enable_zip_modules&amp;#39;: False,
    &amp;#39;state_verbose&amp;#39;: True,
    &amp;#39;state_output&amp;#39;: &amp;#39;full&amp;#39;,
    &amp;#39;state_output_diff&amp;#39;: False,
    &amp;#39;state_auto_order&amp;#39;: True,
    &amp;#39;state_events&amp;#39;: False,
    &amp;#39;state_aggregate&amp;#39;: False,
    &amp;#39;acceptance_wait_time&amp;#39;: 10,
    &amp;#39;acceptance_wait_time_max&amp;#39;: 0,
    &amp;#39;rejected_retry&amp;#39;: False,
    &amp;#39;loop_interval&amp;#39;: 1,
    &amp;#39;verify_env&amp;#39;: True,
    &amp;#39;grains&amp;#39;: {},
    &amp;#39;permissive_pki_access&amp;#39;: False,
    &amp;#39;default_include&amp;#39;: &amp;#39;minion.d/*.conf&amp;#39;,
    &amp;#39;update_url&amp;#39;: False,
    &amp;#39;update_restart_services&amp;#39;: [],
    &amp;#39;retry_dns&amp;#39;: 30,
    &amp;#39;recon_max&amp;#39;: 10000,
    &amp;#39;recon_default&amp;#39;: 1000,
    &amp;#39;recon_randomize&amp;#39;: True,
    &amp;#39;return_retry_timer&amp;#39;: 5,
    &amp;#39;return_retry_timer_max&amp;#39;: 10,
    &amp;#39;random_reauth_delay&amp;#39;: 10,
    &amp;#39;winrepo_source_dir&amp;#39;: &amp;#39;salt://win/repo-ng/&amp;#39;,
    &amp;#39;winrepo_dir&amp;#39;: os.path.join(salt.syspaths.BASE_FILE_ROOTS_DIR, &amp;#39;win&amp;#39;, &amp;#39;repo&amp;#39;),
    &amp;#39;winrepo_dir_ng&amp;#39;: os.path.join(salt.syspaths.BASE_FILE_ROOTS_DIR, &amp;#39;win&amp;#39;, &amp;#39;repo-ng&amp;#39;),
    &amp;#39;winrepo_cachefile&amp;#39;: &amp;#39;winrepo.p&amp;#39;,
    &amp;#39;winrepo_remotes&amp;#39;: [&amp;#39;https://github.com/saltstack/salt-winrepo.git&amp;#39;],
    &amp;#39;winrepo_remotes_ng&amp;#39;: [&amp;#39;https://github.com/saltstack/salt-winrepo-ng.git&amp;#39;],
    &amp;#39;winrepo_branch&amp;#39;: &amp;#39;master&amp;#39;,
    &amp;#39;winrepo_ssl_verify&amp;#39;: True,
    &amp;#39;winrepo_user&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;winrepo_password&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;winrepo_insecure_auth&amp;#39;: False,
    &amp;#39;winrepo_privkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;winrepo_pubkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;winrepo_passphrase&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;pidfile&amp;#39;: os.path.join(salt.syspaths.PIDFILE_DIR, &amp;#39;salt-minion.pid&amp;#39;),
    &amp;#39;range_server&amp;#39;: &amp;#39;range:80&amp;#39;,
    &amp;#39;reactor_refresh_interval&amp;#39;: 60,
    &amp;#39;reactor_worker_threads&amp;#39;: 10,
    &amp;#39;reactor_worker_hwm&amp;#39;: 10000,
    &amp;#39;engines&amp;#39;: [],
    &amp;#39;tcp_keepalive&amp;#39;: True,
    &amp;#39;tcp_keepalive_idle&amp;#39;: 300,
    &amp;#39;tcp_keepalive_cnt&amp;#39;: -1,
    &amp;#39;tcp_keepalive_intvl&amp;#39;: -1,
    &amp;#39;modules_max_memory&amp;#39;: -1,
    &amp;#39;grains_refresh_every&amp;#39;: 0,
    &amp;#39;minion_id_caching&amp;#39;: True,
    &amp;#39;keysize&amp;#39;: 2048,
    &amp;#39;transport&amp;#39;: &amp;#39;zeromq&amp;#39;,
    &amp;#39;auth_timeout&amp;#39;: 60,
    &amp;#39;auth_tries&amp;#39;: 7,
    &amp;#39;master_tries&amp;#39;: _MASTER_TRIES,
    &amp;#39;auth_safemode&amp;#39;: False,
    &amp;#39;random_master&amp;#39;: False,
    &amp;#39;minion_floscript&amp;#39;: os.path.join(FLO_DIR, &amp;#39;minion.flo&amp;#39;),
    &amp;#39;caller_floscript&amp;#39;: os.path.join(FLO_DIR, &amp;#39;caller.flo&amp;#39;),
    &amp;#39;ioflo_verbose&amp;#39;: 0,
    &amp;#39;ioflo_period&amp;#39;: 0.1,
    &amp;#39;ioflo_realtime&amp;#39;: True,
    &amp;#39;ioflo_console_logdir&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;raet_port&amp;#39;: 4510,
    &amp;#39;raet_alt_port&amp;#39;: 4511,
    &amp;#39;raet_mutable&amp;#39;: False,
    &amp;#39;raet_main&amp;#39;: False,
    &amp;#39;raet_clear_remotes&amp;#39;: True,
    &amp;#39;raet_clear_remote_masters&amp;#39;: True,
    &amp;#39;raet_road_bufcnt&amp;#39;: 2,
    &amp;#39;raet_lane_bufcnt&amp;#39;: 100,
    &amp;#39;cluster_mode&amp;#39;: False,
    &amp;#39;cluster_masters&amp;#39;: [],
    &amp;#39;restart_on_error&amp;#39;: False,
    &amp;#39;ping_interval&amp;#39;: 0,
    &amp;#39;username&amp;#39;: None,
    &amp;#39;password&amp;#39;: None,
    &amp;#39;zmq_filtering&amp;#39;: False,
    &amp;#39;zmq_monitor&amp;#39;: False,
    &amp;#39;cache_sreqs&amp;#39;: True,
    &amp;#39;cmd_safe&amp;#39;: True,
    &amp;#39;sudo_user&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;http_request_timeout&amp;#39;: 1 * 60 * 60.0,  # 1 hour
    &amp;#39;http_max_body&amp;#39;: 100 * 1024 * 1024 * 1024,  # 100GB
    # ZMQ HWM for SaltEvent pub socket - different for minion vs. master
    &amp;#39;salt_event_pub_hwm&amp;#39;: 2000,
    # ZMQ HWM for EventPublisher pub socket - different for minion vs. master
    &amp;#39;event_publisher_pub_hwm&amp;#39;: 1000,
    &amp;#39;event_match_type&amp;#39;: &amp;#39;startswith&amp;#39;,
    &amp;#39;minion_restart_command&amp;#39;: [],
    &amp;#39;pub_ret&amp;#39;: True,
    &amp;#39;proxy_host&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;proxy_username&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;proxy_password&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;proxy_port&amp;#39;: 0,
}

DEFAULT_MASTER_OPTS = {
    &amp;#39;interface&amp;#39;: &amp;#39;0.0.0.0&amp;#39;,
    &amp;#39;publish_port&amp;#39;: 4505,
    &amp;#39;pub_hwm&amp;#39;: 1000,
    # ZMQ HWM for SaltEvent pub socket - different for minion vs. master
    &amp;#39;salt_event_pub_hwm&amp;#39;: 2000,
    # ZMQ HWM for EventPublisher pub socket - different for minion vs. master
    &amp;#39;event_publisher_pub_hwm&amp;#39;: 1000,
    &amp;#39;auth_mode&amp;#39;: 1,
    &amp;#39;user&amp;#39;: &amp;#39;root&amp;#39;,
    &amp;#39;worker_threads&amp;#39;: 5,
    &amp;#39;sock_dir&amp;#39;: os.path.join(salt.syspaths.SOCK_DIR, &amp;#39;master&amp;#39;),
    &amp;#39;ret_port&amp;#39;: 4506,
    &amp;#39;timeout&amp;#39;: 5,
    &amp;#39;keep_jobs&amp;#39;: 24,
    &amp;#39;root_dir&amp;#39;: salt.syspaths.ROOT_DIR,
    &amp;#39;pki_dir&amp;#39;: os.path.join(salt.syspaths.CONFIG_DIR, &amp;#39;pki&amp;#39;, &amp;#39;master&amp;#39;),
    &amp;#39;cachedir&amp;#39;: os.path.join(salt.syspaths.CACHE_DIR, &amp;#39;master&amp;#39;),
    &amp;#39;file_roots&amp;#39;: {
        &amp;#39;base&amp;#39;: [salt.syspaths.BASE_FILE_ROOTS_DIR,
                 salt.syspaths.SPM_FORMULA_PATH]
    },
    &amp;#39;master_roots&amp;#39;: {
        &amp;#39;base&amp;#39;: [salt.syspaths.BASE_MASTER_ROOTS_DIR],
    },
    &amp;#39;pillar_roots&amp;#39;: {
        &amp;#39;base&amp;#39;: [salt.syspaths.BASE_PILLAR_ROOTS_DIR,
                 salt.syspaths.SPM_PILLAR_PATH]
    },
    &amp;#39;thorium_interval&amp;#39;: 0.5,
    &amp;#39;thorium_roots&amp;#39;: {
        &amp;#39;base&amp;#39;: [salt.syspaths.BASE_THORIUM_ROOTS_DIR],
        },
    &amp;#39;top_file_merging_strategy&amp;#39;: &amp;#39;merge&amp;#39;,
    &amp;#39;env_order&amp;#39;: [],
    &amp;#39;environment&amp;#39;: None,
    &amp;#39;default_top&amp;#39;: &amp;#39;base&amp;#39;,
    &amp;#39;file_client&amp;#39;: &amp;#39;local&amp;#39;,
    &amp;#39;git_pillar_base&amp;#39;: &amp;#39;master&amp;#39;,
    &amp;#39;git_pillar_branch&amp;#39;: &amp;#39;master&amp;#39;,
    &amp;#39;git_pillar_env&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_root&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_ssl_verify&amp;#39;: True,
    &amp;#39;git_pillar_global_lock&amp;#39;: True,
    &amp;#39;git_pillar_user&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_password&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_insecure_auth&amp;#39;: False,
    &amp;#39;git_pillar_privkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_pubkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;git_pillar_passphrase&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_remotes&amp;#39;: [],
    &amp;#39;gitfs_mountpoint&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_root&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_base&amp;#39;: &amp;#39;master&amp;#39;,
    &amp;#39;gitfs_user&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_password&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_insecure_auth&amp;#39;: False,
    &amp;#39;gitfs_privkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_pubkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_passphrase&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;gitfs_env_whitelist&amp;#39;: [],
    &amp;#39;gitfs_env_blacklist&amp;#39;: [],
    &amp;#39;gitfs_global_lock&amp;#39;: True,
    &amp;#39;gitfs_ssl_verify&amp;#39;: True,
    &amp;#39;gitfs_saltenv&amp;#39;: [],
    &amp;#39;hgfs_remotes&amp;#39;: [],
    &amp;#39;hgfs_mountpoint&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;hgfs_root&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;hgfs_base&amp;#39;: &amp;#39;default&amp;#39;,
    &amp;#39;hgfs_branch_method&amp;#39;: &amp;#39;branches&amp;#39;,
    &amp;#39;hgfs_env_whitelist&amp;#39;: [],
    &amp;#39;hgfs_env_blacklist&amp;#39;: [],
    &amp;#39;show_timeout&amp;#39;: True,
    &amp;#39;show_jid&amp;#39;: False,
    &amp;#39;svnfs_remotes&amp;#39;: [],
    &amp;#39;svnfs_mountpoint&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;svnfs_root&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;svnfs_trunk&amp;#39;: &amp;#39;trunk&amp;#39;,
    &amp;#39;svnfs_branches&amp;#39;: &amp;#39;branches&amp;#39;,
    &amp;#39;svnfs_tags&amp;#39;: &amp;#39;tags&amp;#39;,
    &amp;#39;svnfs_env_whitelist&amp;#39;: [],
    &amp;#39;svnfs_env_blacklist&amp;#39;: [],
    &amp;#39;max_event_size&amp;#39;: 1048576,
    &amp;#39;minionfs_env&amp;#39;: &amp;#39;base&amp;#39;,
    &amp;#39;minionfs_mountpoint&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;minionfs_whitelist&amp;#39;: [],
    &amp;#39;minionfs_blacklist&amp;#39;: [],
    &amp;#39;ext_pillar&amp;#39;: [],
    &amp;#39;pillar_version&amp;#39;: 2,
    &amp;#39;pillar_opts&amp;#39;: False,
    &amp;#39;pillar_safe_render_error&amp;#39;: True,
    &amp;#39;pillar_source_merging_strategy&amp;#39;: &amp;#39;smart&amp;#39;,
    &amp;#39;pillar_merge_lists&amp;#39;: False,
    &amp;#39;pillar_cache&amp;#39;: False,
    &amp;#39;pillar_cache_ttl&amp;#39;: 3600,
    &amp;#39;pillar_cache_backend&amp;#39;: &amp;#39;disk&amp;#39;,
    &amp;#39;ping_on_rotate&amp;#39;: False,
    &amp;#39;peer&amp;#39;: {},
    &amp;#39;preserve_minion_cache&amp;#39;: False,
    &amp;#39;syndic_master&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;syndic_failover&amp;#39;: &amp;#39;random&amp;#39;,
    &amp;#39;syndic_log_file&amp;#39;: os.path.join(salt.syspaths.LOGS_DIR, &amp;#39;syndic&amp;#39;),
    &amp;#39;syndic_pidfile&amp;#39;: os.path.join(salt.syspaths.PIDFILE_DIR, &amp;#39;salt-syndic.pid&amp;#39;),
    &amp;#39;runner_dirs&amp;#39;: [],
    &amp;#39;outputter_dirs&amp;#39;: [],
    &amp;#39;client_acl&amp;#39;: {},
    &amp;#39;client_acl_blacklist&amp;#39;: {},
    &amp;#39;publisher_acl&amp;#39;: {},
    &amp;#39;publisher_acl_blacklist&amp;#39;: {},
    &amp;#39;sudo_acl&amp;#39;: False,
    &amp;#39;external_auth&amp;#39;: {},
    &amp;#39;token_expire&amp;#39;: 43200,
    &amp;#39;token_expire_user_override&amp;#39;: False,
    &amp;#39;extension_modules&amp;#39;: os.path.join(salt.syspaths.CACHE_DIR, &amp;#39;master&amp;#39;, &amp;#39;extmods&amp;#39;),
    &amp;#39;file_recv&amp;#39;: False,
    &amp;#39;file_recv_max_size&amp;#39;: 100,
    &amp;#39;file_buffer_size&amp;#39;: 1048576,
    &amp;#39;file_ignore_regex&amp;#39;: [],
    &amp;#39;file_ignore_glob&amp;#39;: [],
    &amp;#39;fileserver_backend&amp;#39;: [&amp;#39;roots&amp;#39;],
    &amp;#39;fileserver_followsymlinks&amp;#39;: True,
    &amp;#39;fileserver_ignoresymlinks&amp;#39;: False,
    &amp;#39;fileserver_limit_traversal&amp;#39;: False,
    &amp;#39;max_open_files&amp;#39;: 100000,
    &amp;#39;hash_type&amp;#39;: &amp;#39;md5&amp;#39;,
    &amp;#39;conf_file&amp;#39;: os.path.join(salt.syspaths.CONFIG_DIR, &amp;#39;master&amp;#39;),
    &amp;#39;open_mode&amp;#39;: False,
    &amp;#39;auto_accept&amp;#39;: False,
    &amp;#39;renderer&amp;#39;: &amp;#39;yaml_jinja&amp;#39;,
    &amp;#39;renderer_whitelist&amp;#39;: [],
    &amp;#39;renderer_blacklist&amp;#39;: [],
    &amp;#39;failhard&amp;#39;: False,
    &amp;#39;state_top&amp;#39;: &amp;#39;top.sls&amp;#39;,
    &amp;#39;state_top_saltenv&amp;#39;: None,
    &amp;#39;master_tops&amp;#39;: {},
    &amp;#39;order_masters&amp;#39;: False,
    &amp;#39;job_cache&amp;#39;: True,
    &amp;#39;ext_job_cache&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;master_job_cache&amp;#39;: &amp;#39;local_cache&amp;#39;,
    &amp;#39;job_cache_store_endtime&amp;#39;: False,
    &amp;#39;minion_data_cache&amp;#39;: True,
    &amp;#39;enforce_mine_cache&amp;#39;: False,
    &amp;#39;ipc_mode&amp;#39;: _DFLT_IPC_MODE,
    &amp;#39;ipv6&amp;#39;: False,
    &amp;#39;tcp_master_pub_port&amp;#39;: 4512,
    &amp;#39;tcp_master_pull_port&amp;#39;: 4513,
    &amp;#39;tcp_master_publish_pull&amp;#39;: 4514,
    &amp;#39;tcp_master_workers&amp;#39;: 4515,
    &amp;#39;log_file&amp;#39;: os.path.join(salt.syspaths.LOGS_DIR, &amp;#39;master&amp;#39;),
    &amp;#39;log_level&amp;#39;: &amp;#39;warning&amp;#39;,
    &amp;#39;log_level_logfile&amp;#39;: None,
    &amp;#39;log_datefmt&amp;#39;: _DFLT_LOG_DATEFMT,
    &amp;#39;log_datefmt_logfile&amp;#39;: _DFLT_LOG_DATEFMT_LOGFILE,
    &amp;#39;log_fmt_console&amp;#39;: _DFLT_LOG_FMT_CONSOLE,
    &amp;#39;log_fmt_logfile&amp;#39;: _DFLT_LOG_FMT_LOGFILE,
    &amp;#39;log_granular_levels&amp;#39;: {},
    &amp;#39;pidfile&amp;#39;: os.path.join(salt.syspaths.PIDFILE_DIR, &amp;#39;salt-master.pid&amp;#39;),
    &amp;#39;publish_session&amp;#39;: 86400,
    &amp;#39;range_server&amp;#39;: &amp;#39;range:80&amp;#39;,
    &amp;#39;reactor&amp;#39;: [],
    &amp;#39;reactor_refresh_interval&amp;#39;: 60,
    &amp;#39;reactor_worker_threads&amp;#39;: 10,
    &amp;#39;reactor_worker_hwm&amp;#39;: 10000,
    &amp;#39;engines&amp;#39;: [],
    &amp;#39;event_return&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;event_return_queue&amp;#39;: 0,
    &amp;#39;event_return_whitelist&amp;#39;: [],
    &amp;#39;event_return_blacklist&amp;#39;: [],
    &amp;#39;event_match_type&amp;#39;: &amp;#39;startswith&amp;#39;,
    &amp;#39;serial&amp;#39;: &amp;#39;msgpack&amp;#39;,
    &amp;#39;state_verbose&amp;#39;: True,
    &amp;#39;state_output&amp;#39;: &amp;#39;full&amp;#39;,
    &amp;#39;state_output_diff&amp;#39;: False,
    &amp;#39;state_auto_order&amp;#39;: True,
    &amp;#39;state_events&amp;#39;: False,
    &amp;#39;state_aggregate&amp;#39;: False,
    &amp;#39;search&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;search_index_interval&amp;#39;: 3600,
    &amp;#39;loop_interval&amp;#39;: 60,
    &amp;#39;nodegroups&amp;#39;: {},
    &amp;#39;ssh_list_nodegroups&amp;#39;: {},
    &amp;#39;ssh_use_home_key&amp;#39;: False,
    &amp;#39;cython_enable&amp;#39;: False,
    &amp;#39;enable_gpu_grains&amp;#39;: False,
    # XXX: Remove &amp;#39;key_logfile&amp;#39; support in 2014.1.0
    &amp;#39;key_logfile&amp;#39;: os.path.join(salt.syspaths.LOGS_DIR, &amp;#39;key&amp;#39;),
    &amp;#39;verify_env&amp;#39;: True,
    &amp;#39;permissive_pki_access&amp;#39;: False,
    &amp;#39;default_include&amp;#39;: &amp;#39;master.d/*.conf&amp;#39;,
    &amp;#39;winrepo_dir&amp;#39;: os.path.join(salt.syspaths.BASE_FILE_ROOTS_DIR, &amp;#39;win&amp;#39;, &amp;#39;repo&amp;#39;),
    &amp;#39;winrepo_dir_ng&amp;#39;: os.path.join(salt.syspaths.BASE_FILE_ROOTS_DIR, &amp;#39;win&amp;#39;, &amp;#39;repo-ng&amp;#39;),
    &amp;#39;winrepo_cachefile&amp;#39;: &amp;#39;winrepo.p&amp;#39;,
    &amp;#39;winrepo_remotes&amp;#39;: [&amp;#39;https://github.com/saltstack/salt-winrepo.git&amp;#39;],
    &amp;#39;winrepo_remotes_ng&amp;#39;: [&amp;#39;https://github.com/saltstack/salt-winrepo-ng.git&amp;#39;],
    &amp;#39;winrepo_branch&amp;#39;: &amp;#39;master&amp;#39;,
    &amp;#39;winrepo_ssl_verify&amp;#39;: True,
    &amp;#39;winrepo_user&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;winrepo_password&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;winrepo_insecure_auth&amp;#39;: False,
    &amp;#39;winrepo_privkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;winrepo_pubkey&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;winrepo_passphrase&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;syndic_wait&amp;#39;: 5,
    &amp;#39;jinja_lstrip_blocks&amp;#39;: False,
    &amp;#39;jinja_trim_blocks&amp;#39;: False,
    &amp;#39;tcp_keepalive&amp;#39;: True,
    &amp;#39;tcp_keepalive_idle&amp;#39;: 300,
    &amp;#39;tcp_keepalive_cnt&amp;#39;: -1,
    &amp;#39;tcp_keepalive_intvl&amp;#39;: -1,
    &amp;#39;sign_pub_messages&amp;#39;: False,
    &amp;#39;keysize&amp;#39;: 2048,
    &amp;#39;transport&amp;#39;: &amp;#39;zeromq&amp;#39;,
    &amp;#39;gather_job_timeout&amp;#39;: 10,
    &amp;#39;syndic_event_forward_timeout&amp;#39;: 0.5,
    &amp;#39;syndic_jid_forward_cache_hwm&amp;#39;: 100,
    &amp;#39;ssh_passwd&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;ssh_port&amp;#39;: &amp;#39;22&amp;#39;,
    &amp;#39;ssh_sudo&amp;#39;: False,
    &amp;#39;ssh_timeout&amp;#39;: 60,
    &amp;#39;ssh_user&amp;#39;: &amp;#39;root&amp;#39;,
    &amp;#39;ssh_scan_ports&amp;#39;: &amp;#39;22&amp;#39;,
    &amp;#39;ssh_scan_timeout&amp;#39;: 0.01,
    &amp;#39;ssh_identities_only&amp;#39;: False,
    &amp;#39;master_floscript&amp;#39;: os.path.join(FLO_DIR, &amp;#39;master.flo&amp;#39;),
    &amp;#39;worker_floscript&amp;#39;: os.path.join(FLO_DIR, &amp;#39;worker.flo&amp;#39;),
    &amp;#39;maintenance_floscript&amp;#39;: os.path.join(FLO_DIR, &amp;#39;maint.flo&amp;#39;),
    &amp;#39;ioflo_verbose&amp;#39;: 0,
    &amp;#39;ioflo_period&amp;#39;: 0.01,
    &amp;#39;ioflo_realtime&amp;#39;: True,
    &amp;#39;ioflo_console_logdir&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;raet_port&amp;#39;: 4506,
    &amp;#39;raet_alt_port&amp;#39;: 4511,
    &amp;#39;raet_mutable&amp;#39;: False,
    &amp;#39;raet_main&amp;#39;: True,
    &amp;#39;raet_clear_remotes&amp;#39;: False,
    &amp;#39;raet_clear_remote_masters&amp;#39;: True,
    &amp;#39;raet_road_bufcnt&amp;#39;: 2,
    &amp;#39;raet_lane_bufcnt&amp;#39;: 100,
    &amp;#39;cluster_mode&amp;#39;: False,
    &amp;#39;cluster_masters&amp;#39;: [],
    &amp;#39;sqlite_queue_dir&amp;#39;: os.path.join(salt.syspaths.CACHE_DIR, &amp;#39;master&amp;#39;, &amp;#39;queues&amp;#39;),
    &amp;#39;queue_dirs&amp;#39;: [],
    &amp;#39;cli_summary&amp;#39;: False,
    &amp;#39;max_minions&amp;#39;: 0,
    &amp;#39;master_sign_key_name&amp;#39;: &amp;#39;master_sign&amp;#39;,
    &amp;#39;master_sign_pubkey&amp;#39;: False,
    &amp;#39;master_pubkey_signature&amp;#39;: &amp;#39;master_pubkey_signature&amp;#39;,
    &amp;#39;master_use_pubkey_signature&amp;#39;: False,
    &amp;#39;zmq_filtering&amp;#39;: False,
    &amp;#39;zmq_monitor&amp;#39;: False,
    &amp;#39;con_cache&amp;#39;: False,
    &amp;#39;rotate_aes_key&amp;#39;: True,
    &amp;#39;cache_sreqs&amp;#39;: True,
    &amp;#39;dummy_pub&amp;#39;: False,
    &amp;#39;http_request_timeout&amp;#39;: 1 * 60 * 60.0,  # 1 hour
    &amp;#39;http_max_body&amp;#39;: 100 * 1024 * 1024 * 1024,  # 100GB
    &amp;#39;python2_bin&amp;#39;: &amp;#39;python2&amp;#39;,
    &amp;#39;python3_bin&amp;#39;: &amp;#39;python3&amp;#39;,
}

# ----- Salt Proxy Minion Configuration Defaults -----------------------------------&amp;gt;
# Note that proxies use the same config path as regular minions.  DEFAULT_MINION_OPTS
# is loaded first, then if we are setting up a proxy, the config is overwritten with
# these settings.
DEFAULT_PROXY_MINION_OPTS = {
    &amp;#39;conf_file&amp;#39;: os.path.join(salt.syspaths.CONFIG_DIR, &amp;#39;proxy&amp;#39;),
    &amp;#39;log_file&amp;#39;: os.path.join(salt.syspaths.LOGS_DIR, &amp;#39;proxy&amp;#39;),
    &amp;#39;add_proxymodule_to_opts&amp;#39;: False,
    &amp;#39;proxy_merge_grains_in_module&amp;#39;: False,
    &amp;#39;default_include&amp;#39;: &amp;#39;proxy.d/*.conf&amp;#39;,
}

# ----- Salt Cloud Configuration Defaults -----------------------------------&amp;gt;
CLOUD_CONFIG_DEFAULTS = {
    &amp;#39;verify_env&amp;#39;: True,
    &amp;#39;default_include&amp;#39;: &amp;#39;cloud.conf.d/*.conf&amp;#39;,
    # Global defaults
    &amp;#39;ssh_auth&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;keysize&amp;#39;: 4096,
    &amp;#39;os&amp;#39;: &amp;#39;&amp;#39;,
    &amp;#39;script&amp;#39;: &amp;#39;bootstrap-salt&amp;#39;,
    &amp;#39;start_action&amp;#39;: None,
    &amp;#39;enable_hard_maps&amp;#39;: False,
    &amp;#39;delete_sshkeys&amp;#39;: False,
    # Custom deploy scripts
    &amp;#39;deploy_scripts_search_path&amp;#39;: &amp;#39;cloud.deploy.d&amp;#39;,
    # Logging defaults
    &amp;#39;log_file&amp;#39;: os.path.join(salt.syspaths.LOGS_DIR, &amp;#39;cloud&amp;#39;),
    &amp;#39;log_level&amp;#39;: &amp;#39;warning&amp;#39;,
    &amp;#39;log_level_logfile&amp;#39;: None,
    &amp;#39;log_datefmt&amp;#39;: _DFLT_LOG_DATEFMT,
    &amp;#39;log_datefmt_logfile&amp;#39;: _DFLT_LOG_DATEFMT_LOGFILE,
    &amp;#39;log_fmt_console&amp;#39;: _DFLT_LOG_FMT_CONSOLE,
    &amp;#39;log_fmt_logfile&amp;#39;: _DFLT_LOG_FMT_LOGFILE,
    &amp;#39;log_granular_levels&amp;#39;: {},
    &amp;#39;bootstrap_delay&amp;#39;: None,
}

DEFAULT_API_OPTS = {
    # ----- Salt master settings overridden by Salt-API ---------------------&amp;gt;
    &amp;#39;pidfile&amp;#39;: &amp;#39;/var/run/salt-api.pid&amp;#39;,
    &amp;#39;logfile&amp;#39;: &amp;#39;/var/log/salt/api&amp;#39;,
    &amp;#39;rest_timeout&amp;#39;: 300,
    # &amp;lt;---- Salt master settings overridden by Salt-API ----------------------
}

DEFAULT_SPM_OPTS = {
    # ----- Salt master settings overridden by SPM ---------------------&amp;gt;
    &amp;#39;spm_conf_file&amp;#39;: os.path.join(salt.syspaths.CONFIG_DIR, &amp;#39;spm&amp;#39;),
    &amp;#39;formula_path&amp;#39;: &amp;#39;/srv/spm/salt&amp;#39;,
    &amp;#39;pillar_path&amp;#39;: &amp;#39;/srv/spm/pillar&amp;#39;,
    &amp;#39;reactor_path&amp;#39;: &amp;#39;/srv/spm/reactor&amp;#39;,
    &amp;#39;spm_logfile&amp;#39;: &amp;#39;/var/log/salt/spm&amp;#39;,
    &amp;#39;spm_default_include&amp;#39;: &amp;#39;spm.d/*.conf&amp;#39;,
    # spm_repos_config also includes a .d/ directory
    &amp;#39;spm_repos_config&amp;#39;: &amp;#39;/etc/salt/spm.repos&amp;#39;,
    &amp;#39;spm_cache_dir&amp;#39;: os.path.join(salt.syspaths.CACHE_DIR, &amp;#39;spm&amp;#39;),
    &amp;#39;spm_build_dir&amp;#39;: &amp;#39;/srv/spm_build&amp;#39;,
    &amp;#39;spm_build_exclude&amp;#39;: [&amp;#39;CVS&amp;#39;, &amp;#39;.hg&amp;#39;, &amp;#39;.git&amp;#39;, &amp;#39;.svn&amp;#39;],
    &amp;#39;spm_db&amp;#39;: os.path.join(salt.syspaths.CACHE_DIR, &amp;#39;spm&amp;#39;, &amp;#39;packages.db&amp;#39;),
    # &amp;lt;---- Salt master settings overridden by SPM ----------------------
}

VM_CONFIG_DEFAULTS = {
    &amp;#39;default_include&amp;#39;: &amp;#39;cloud.profiles.d/*.conf&amp;#39;,
}

PROVIDER_CONFIG_DEFAULTS = {
    &amp;#39;default_include&amp;#39;: &amp;#39;cloud.providers.d/*.conf&amp;#39;,
}
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Salt"></category></entry><entry><title>salt - LocalClient 源码解析</title><link href="http://www.yilaguan.cc/posts/2016/08/10/salt-localclient-yuan-ma-jie-xi.html" rel="alternate"></link><published>2016-08-10T00:00:00+08:00</published><author><name>YiHan</name></author><id>tag:www.yilaguan.cc,2016-08-10:posts/2016/08/10/salt-localclient-yuan-ma-jie-xi.html</id><summary type="html">&lt;p&gt;salt 源码点滴记录&lt;/p&gt;
&lt;h2&gt;最简单的操作LocalClient&lt;/h2&gt;
&lt;p&gt;想看看salt的源码, 从最简单的操作开始。 其实restful api, 命令行,还是python api,都殊途同归,最后也会到达salt.client, 只是入口不一样, restful API入口是 salt.netapi,
而命令行的入口是 salt.cli。 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 变更虚拟环境
source /u01/virtualenv/salt/bin/activate
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;salt.client&lt;/span&gt;

&lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LocalClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test.fib&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;/u01/github/salt-develop/salt/client/&lt;strong&gt;init&lt;/strong&gt;.py : class LocalClient&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;init&lt;/strong&gt;()&lt;/h3&gt;
&lt;p&gt;主要初始化了上下文, 然后啥也没干,细节先TODO,后续再补&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# c_path: 主要是master配置文件所在,一般是/etc/salt/master ,一般不填&lt;/span&gt;
&lt;span class="c1"&gt;# mopts: 如果有值,则忽略c_path ,这两个参数主要是搞定 self.opts&lt;/span&gt;
&lt;span class="c1"&gt;# skip_perm_errors: 权限校验 TODO&lt;/span&gt;
&lt;span class="c1"&gt;# io_loop: TODO&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;c_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;syspaths&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CONFIG_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                 &lt;span class="n"&gt;mopts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;skip_perm_errors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;io_loop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="c1"&gt;# self.opts 所有的配置项&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;mopts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mopts&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;{0} expects a file path not a directory path({1}) to &amp;#39;&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;it&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;s &lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;c_path&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt; keyword argument&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c_path&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client_config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# 其他细节 TODO&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serial&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;salt_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_specific_user&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;skip_perm_errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;skip_perm_errors&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__read_master_key&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="c1"&gt;# 用于获取返回&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sock_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;transport&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;io_loop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;io_loop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;functions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minion_mods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;returners&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;returners&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;functions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;主要上下文 【TODO】:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;self.opts&lt;/li&gt;
&lt;li&gt;self.utils&lt;/li&gt;
&lt;li&gt;self.key&lt;/li&gt;
&lt;li&gt;self.salt_user&lt;/li&gt;
&lt;li&gt;self.skip_perm_errors&lt;/li&gt;
&lt;li&gt;self.event  # 用于获取命令返回&lt;/li&gt;
&lt;li&gt;self.utils&lt;/li&gt;
&lt;li&gt;self.functions&lt;/li&gt;
&lt;li&gt;self.returners&lt;/li&gt;
&lt;li&gt;self.serial # 序列化, 关心的配置为serial ,默认是 msgpack &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cmd()&lt;/h3&gt;
&lt;p&gt;为了了解整个流程,而不是去纠结各种执行方式,比如批次执行,异步执行等等, 就看cmd吧。&lt;br /&gt;
cmd 参数很好理解, 主要做了两个事情, 执行任务run_job, 返回 pub_data, pub_data 中主要有job_id和minions, 用于从event中获取到返回结果,
返回结果是一个minion_id 为key 的字典。 代码量很少,就粘贴在下面了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# tgt, expr_form 确定minins&lt;/span&gt;
&lt;span class="c1"&gt;# fun arg timeout 确定命令执行&lt;/span&gt;
&lt;span class="c1"&gt;# ret 指定return&lt;/span&gt;
&lt;span class="c1"&gt;# jid 指定jid&lt;/span&gt;
&lt;span class="c1"&gt;# kwarg&lt;/span&gt;
&lt;span class="c1"&gt;# kwargs 权限相关参数&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;tgt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;expr_form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;glob&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;jid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;kwarg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;condition_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwarg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pub_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_job&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tgt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;expr_form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="n"&gt;jid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;pub_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pub_data&lt;/span&gt;

    &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fn_ret&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_cli_event_returns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;pub_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;pub_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;minions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_timeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;tgt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;expr_form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;fn_ret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;six&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iteritems&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn_ret&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;run_job()&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run_job&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;tgt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;expr_form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;glob&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;jid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;kwarg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;condition_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwarg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;pub_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;tgt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;expr_form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;jid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;jid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_timeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;SaltClientError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Re-raise error with specific message&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;SaltClientError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;The salt master could not be contacted. Is master running?&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;general_exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Convert to generic client error and pass along message&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;SaltClientError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;general_exception&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_check_pub_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pub_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;pub()&lt;/h3&gt;
&lt;p&gt;参数很好理解,跟之前的参数一样&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;tgt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="n"&gt;expr_form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;glob&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;jid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;根据ipc_mode选择了通讯方式,是tcp还是ipc, 一般windows 下是 tcp, 而linux 则是ipc&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ipc_mode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tcp&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt;
                &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sock_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;publish_pull.ipc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))):&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;Unable to connect to the salt master publisher at &amp;#39;&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;{0}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sock_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;SaltClientError&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;组装通讯用的data, 主要处理了tgt和expr_from,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;payload_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_prep_pub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;tgt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;expr_form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;jid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 结果, 如果使用syndic模式, 需要将user和timeout传递下去&lt;/span&gt;
&lt;span class="n"&gt;payload_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cmd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;publish&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s1"&gt;&amp;#39;tgt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tgt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s1"&gt;&amp;#39;fun&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s1"&gt;&amp;#39;arg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s1"&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s1"&gt;&amp;#39;tgt_type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;expr_form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s1"&gt;&amp;#39;ret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s1"&gt;&amp;#39;jid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;jid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="c1"&gt;####&lt;/span&gt;
                          &lt;span class="s1"&gt;&amp;#39;kwargs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;syndic_master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;salt_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s1"&gt;&amp;#39;to&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;order_masters&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                          &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;获取channel, 这里使用了warp,做了一些封装, 上述例子最终使用的是 AsyncZeroMQReqChannel, &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# master url, 此处的ip 为master 本机ip: 0.0.0.0 , 端口为4506, 这个端口是用来minions 返回结果用的&lt;/span&gt;
&lt;span class="n"&gt;master_uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tcp://&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ip_bracket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;interface&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
                     &lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ret_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transport&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                 &lt;span class="n"&gt;crypt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clear&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                 &lt;span class="n"&gt;master_uri&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;master_uri&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;AsyncZeroMQReqChannel 细节往后看, 这里接着看run_job, 将消息发送给zeromq 4506 端口后, 会检查其结果。 &lt;/p&gt;
&lt;h3&gt;_check_pub_data(pub_data)&lt;/h3&gt;
&lt;p&gt;主要做了两件事情, 一是检查jid是否正常, 二是subscribe event获取执行结果。 &lt;/p&gt;
&lt;h3&gt;get_cli_event_returns()&lt;/h3&gt;
&lt;p&gt;通过event获取结果, 主要通过event_tag 筛选消息。程序会连接到 zmq pub socket上, 通过tag解析不同类型的event。&lt;/p&gt;
&lt;p&gt;job tag 类似 salt/job/jid, 如果是syndic, 则类似于 syndic/.*/jid&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;TAGEND&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# long tag delimiter&lt;/span&gt;
&lt;span class="n"&gt;TAGPARTER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# name spaced tag delimiter&lt;/span&gt;
&lt;span class="n"&gt;SALT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;salt&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;# base prefix for all salt/ events&lt;/span&gt;
&lt;span class="c1"&gt;# dict map of namespaced base tag prefixes for salt events&lt;/span&gt;
&lt;span class="n"&gt;TAGS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# prefix for all salt/auth events&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;job&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;job&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# prefix for all salt/job events (minion jobs)&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# prefix for all salt/key events&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;minion&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;minion&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# prefix for all salt/minion events&lt;/span&gt;
                         &lt;span class="c1"&gt;# (minion sourced events)&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;syndic&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;syndic&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# prefix for all salt/syndic events&lt;/span&gt;
                         &lt;span class="c1"&gt;# (syndic minion sourced events)&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;run&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;run&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# prefix for all salt/run events (salt runners)&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;wheel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wheel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# prefix for all salt/wheel events&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;cloud&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cloud&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# prefix for all salt/cloud events&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;fileserver&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fileserver&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# prefix for all salt/fileserver events&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;queue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;queue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# prefix for all salt/queue events&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;subscribe 主要是添加一个tag 名称, 和match 用的fuction&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;match_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;        Subscribe to events matching the passed tag.&lt;/span&gt;

&lt;span class="sd"&gt;        If you do not subscribe to a tag, events will be discarded by calls to&lt;/span&gt;
&lt;span class="sd"&gt;        get_event that request a different tag. In contexts where many different&lt;/span&gt;
&lt;span class="sd"&gt;        jobs are outstanding it is important to subscribe to prevent one call&lt;/span&gt;
&lt;span class="sd"&gt;        to get_event from discarding a response required by a subsequent call&lt;/span&gt;
&lt;span class="sd"&gt;        to get_event.&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="n"&gt;match_func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_match_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;match_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pending_tags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;match_func&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;get_event 优先通过 _check_pending 检查pending_events, 如果存在则放回,如果不存在,则调用_get_event 获取消息,&lt;br /&gt;
如果直接match上了,则返回,那些没有match上当前tag,但是match上其他tag的,放置到 pending_events 列表中,什么也没match上的直接丢弃。处理过程中,也会将 unsubscribe的event移除。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_get_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;match_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tag&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="c1"&gt;# tag not match&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pmatch_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tag&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;ptag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ptag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pmatch_func&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pending_tags&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;get_event() caching unwanted event = {0}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pending_events&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# only update the wait timeout if we had one&lt;/span&gt;
                    &lt;span class="n"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timeout_at&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;上面只是整体的一个执行流程, 还缺少salt transport 部分, event 部分, client端等处理。&lt;/h2&gt;</summary><category term="Salt"></category></entry><entry><title>salt valid opts</title><link href="http://www.yilaguan.cc/posts/2016/08/10/salt-valid-opts.html" rel="alternate"></link><published>2016-08-10T00:00:00+08:00</published><author><name>YiHan</name></author><id>tag:www.yilaguan.cc,2016-08-10:posts/2016/08/10/salt-valid-opts.html</id><summary type="html">&lt;p&gt;/u01/github/salt-develop/salt/config/&lt;strong&gt;init&lt;/strong&gt;.py &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;VALID_OPTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# The address of the salt master. May be specified as IP address or hostname&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string_types&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

    &lt;span class="c1"&gt;# The TCP/UDP port of the master to connect to in order to listen to publications&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The behaviour of the minion when connecting to a master. Can specify &amp;#39;failover&amp;#39;,&lt;/span&gt;
    &lt;span class="c1"&gt;# &amp;#39;disable&amp;#39; or &amp;#39;func&amp;#39;. If &amp;#39;func&amp;#39; is specified, the &amp;#39;master&amp;#39; option should be set to an&lt;/span&gt;
    &lt;span class="c1"&gt;# exec module function to run to determine the master hostname. If &amp;#39;disable&amp;#39; is specified&lt;/span&gt;
    &lt;span class="c1"&gt;# the minion will run, but will not try to connect to a master.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Specify the format in which the master address will be specified. Can&lt;/span&gt;
    &lt;span class="c1"&gt;# specify &amp;#39;default&amp;#39; or &amp;#39;ip_only&amp;#39;. If &amp;#39;ip_only&amp;#39; is specified, then the&lt;/span&gt;
    &lt;span class="c1"&gt;# master address will not be split into IP and PORT.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_uri_format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The fingerprint of the master key may be specified to increase security. Generate&lt;/span&gt;
    &lt;span class="c1"&gt;# a master fingerprint with `salt-key -F master`&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_finger&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Selects a random master when starting a minion up in multi-master mode&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_shuffle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# When in multi-master mode, temporarily remove a master from the list if a conenction&lt;/span&gt;
    &lt;span class="c1"&gt;# is interrupted and try another master in the list.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_alive_interval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# When in multi-master failover mode, fail back to the first master in the list if it&amp;#39;s back&lt;/span&gt;
    &lt;span class="c1"&gt;# online.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_failback&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# When in multi-master mode, and master_failback is enabled ping the top master with this&lt;/span&gt;
    &lt;span class="c1"&gt;# interval.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_failback_interval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The name of the signing key-pair&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_sign_key_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Sign the master auth-replies with a cryptographic signature of the masters public key.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_sign_pubkey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Enables verification of the master-public-signature returned by the master in auth-replies.&lt;/span&gt;
    &lt;span class="c1"&gt;# Must also set master_sign_pubkey for this to work&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;verify_master_pubkey_sign&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# If verify_master_pubkey_sign is enabled, the signature is only verified, if the public-key of the master changes.&lt;/span&gt;
    &lt;span class="c1"&gt;# If the signature should always be verified, this can be set to True.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;always_verify_signature&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The name of the file in the masters pki-directory that holds the pre-calculated signature of the masters public-key.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_pubkey_signature&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Instead of computing the signature for each auth-reply, use a pre-calculated signature.&lt;/span&gt;
    &lt;span class="c1"&gt;# The master_pubkey_signature must also be set for this.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_use_pubkey_signature&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The key fingerprint of the higher-level master for the syndic to verify it is talking to the intended&lt;/span&gt;
    &lt;span class="c1"&gt;# master&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;syndic_finger&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The user under which the daemon should run&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The root directory prepended to these options: pki_dir, cachedir,&lt;/span&gt;
    &lt;span class="c1"&gt;# sock_dir, log_file, autosign_file, autoreject_file, extension_modules,&lt;/span&gt;
    &lt;span class="c1"&gt;# key_logfile, pidfile:&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;root_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The directory used to store public key data&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pki_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A unique identifier for this daemon&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The directory to store all cache files.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;cachedir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Flag to cache jobs locally.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;cache_jobs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The path to the salt configuration file&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;conf_file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The directory containing unix sockets for things like the event bus&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;sock_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Specifies how the file server should backup files, if enabled. The backups&lt;/span&gt;
    &lt;span class="c1"&gt;# live in the cache dir.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;backup_mode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A default renderer for all operations on this host&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;renderer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Renderer whitelist. The only renderers from this list are allowed.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;renderer_whitelist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Rendrerer blacklist. Renderers from this list are disalloed even if specified in whitelist.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;renderer_blacklist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A flag indicating that a highstate run should immediately cease if a failure occurs.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;failhard&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A flag to indicate that highstate runs should force refresh the modules prior to execution&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;autoload_dynamic_modules&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Force the minion into a single environment when it fetches files from the master&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;environment&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Force the minion into a single pillar root when it fetches pillar data from the master&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pillarenv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Allows a user to provide an alternate name for top.sls&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;state_top&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="s1"&gt;&amp;#39;state_top_saltenv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# States to run when a minion starts up&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;startup_states&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# List of startup states&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;sls_list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A top file to execute if startup_states == &amp;#39;top&amp;#39;&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;top_file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Location of the files a minion should look for. Set to &amp;#39;local&amp;#39; to never ask the master.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;file_client&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# When using a local file_client, this parameter is used to allow the client to connect to&lt;/span&gt;
    &lt;span class="c1"&gt;# a master for remote execution.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;use_master_when_local&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A map of saltenvs and fileserver backend locations&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;file_roots&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A map of saltenvs and fileserver backend locations&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pillar_roots&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The type of hashing algorithm to use when doing file comparisons&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;hash_type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# FIXME Does not appear to be implemented&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;disable_modules&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# FIXME Does not appear to be implemented&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;disable_returners&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Tell the loader to only load modules in this list&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;whitelist_modules&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A list of additional directories to search for salt modules in&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;module_dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A list of additional directories to search for salt returners in&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;returner_dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A list of additional directories to search for salt states in&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;states_dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A list of additional directories to search for salt grains in&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;grains_dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A list of additional directories to search for salt renderers in&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;render_dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A list of additional directories to search for salt outputters in&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;outputter_dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A list of additional directories to search for salt utilities in. (Used by the loader&lt;/span&gt;
    &lt;span class="c1"&gt;# to populate __utils__)&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;utils_dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# salt cloud providers&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;providers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# First remove all modules during any sync operation&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;clean_dynamic_modules&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A flag indicating that a master should accept any minion connection without any authentication&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;open_mode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Whether or not processes should be forked when needed. The alternative is to use threading.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;multiprocessing&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Whether or not the salt minion should run scheduled mine updates&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;mine_enabled&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Whether or not scheduled mine updates should be accompanied by a job return for the job cache&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;mine_return_job&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Schedule a mine update every n number of seconds&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;mine_interval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The ipc strategy. (i.e., sockets versus tcp, etc)&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ipc_mode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Enable ipv6 support for daemons&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ipv6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The chunk size to use when streaming files with the file server&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;file_buffer_size&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The TCP port on which minion events should be published if ipc_mode is TCP&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;tcp_pub_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The TCP port on which minion events should be pulled if ipc_mode is TCP&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;tcp_pull_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The TCP port on which events for the master should be pulled if ipc_mode is TCP&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;tcp_master_pub_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The TCP port on which events for the master should be pulled if ipc_mode is TCP&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;tcp_master_pull_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The TCP port on which events for the master should pulled and then republished onto&lt;/span&gt;
    &lt;span class="c1"&gt;# the event bus on the master&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;tcp_master_publish_pull&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The TCP port for mworkers to connect to on the master&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;tcp_master_workers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The file to send logging data to&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;log_file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The level of verbosity at which to log&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;log_level&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The log level to log to a given file&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;log_level_logfile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The format to construct dates in log files&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;log_datefmt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The dateformat for a given logfile&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;log_datefmt_logfile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The format for console logs&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;log_fmt_console&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The format for a given log file&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;log_fmt_logfile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

    &lt;span class="c1"&gt;# A dictionary of logging levels&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;log_granular_levels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# If an event is above this size, it will be trimmed before putting it on the event bus&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;max_event_size&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Always execute states with test=True if this flag is set&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Tell the loader to attempt to import *.pyx cython files if cython is available&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;cython_enable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Tell the loader to attempt to import *.zip archives&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;enable_zip_modules&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Tell the client to show minions that have timed out&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;show_timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Tell the client to display the jid when a job is published&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;show_jid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Tells the highstate outputter to show successful states. False will omit successes.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;state_verbose&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Specify the format for state outputs. See highstate outputter for additional details.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;state_output&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Tells the highstate outputter to only report diffs of states that changed&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;state_output_diff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# When true, states run in the order defined in an SLS file, unless requisites re-order them&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;state_auto_order&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Fire events as state chunks are processed by the state compiler&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;state_events&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of seconds a minion should wait before retry when attempting authentication&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;acceptance_wait_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of seconds a minion should wait before giving up during authentication&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;acceptance_wait_time_max&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Retry a connection attempt if the master rejects a minion&amp;#39;s public key&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;rejected_retry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The interval in which a daemon&amp;#39;s main loop should attempt to perform all necessary tasks&lt;/span&gt;
    &lt;span class="c1"&gt;# for normal operation&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;loop_interval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Perform pre-flight verification steps before daemon startup, such as checking configuration&lt;/span&gt;
    &lt;span class="c1"&gt;# files and certain directories.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;verify_env&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The grains dictionary for a minion, containing specific &amp;quot;facts&amp;quot; about the minion&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;grains&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Allow a daemon to function even if the key directories are not secured&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;permissive_pki_access&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The path to a directory to pull in configuration file includes&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;default_include&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# If a minion is running an esky build of salt, upgrades can be performed using the url&lt;/span&gt;
    &lt;span class="c1"&gt;# defined here. See saltutil.update() for additional information&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;update_url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string_types&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

    &lt;span class="c1"&gt;# If using update_url with saltutil.update(), provide a list of services to be restarted&lt;/span&gt;
    &lt;span class="c1"&gt;# post-install&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;update_restart_services&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of seconds to sleep between retrying an attempt to resolve the hostname of a&lt;/span&gt;
    &lt;span class="c1"&gt;# salt master&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;retry_dns&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# set the zeromq_reconnect_ivl option on the minion.&lt;/span&gt;
    &lt;span class="c1"&gt;# http://lists.zeromq.org/pipermail/zeromq-dev/2011-January/008845.html&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;recon_max&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# If recon_randomize is set, this specifies the lower bound for the randomized period&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;recon_default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Tells the minion to choose a bounded, random interval to have zeromq attempt to reconnect&lt;/span&gt;
    &lt;span class="c1"&gt;# in the event of a disconnect event&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;recon_randomize&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="s1"&gt;&amp;#39;return_retry_timer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;return_retry_timer_max&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Specify a returner in which all events will be sent to. Requires that the returner in question&lt;/span&gt;
    &lt;span class="c1"&gt;# have an event_return(event) function!&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;event_return&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of events to queue up in memory before pushing them down the pipe to an event returner&lt;/span&gt;
    &lt;span class="c1"&gt;# specified by &amp;#39;event_return&amp;#39;&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;event_return_queue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Only forward events to an event returner if it matches one of the tags in this list&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;event_return_whitelist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Events matching a tag in this list should never be sent to an event returner.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;event_return_blacklist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# default match type for filtering events tags: startswith, endswith, find, regex, fnmatch&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;event_match_type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# This pidfile to write out to when a daemon starts&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pidfile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Used with the SECO range master tops system&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;range_server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The tcp keepalive interval to set on TCP ports. This setting can be used to tune salt connectivity&lt;/span&gt;
    &lt;span class="c1"&gt;# issues in messy network environments with misbehaving firewalls&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;tcp_keepalive&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Sets zeromq TCP keepalive idle. May be used to tune issues with minion disconnects&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;tcp_keepalive_idle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Sets zeromq TCP keepalive count. May be used to tune issues with minion disconnects&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;tcp_keepalive_cnt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Sets zeromq TCP keepalive interval. May be used to tune issues with minion disconnects.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;tcp_keepalive_intvl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The network interface for a daemon to bind to&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;interface&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The port for a salt master to broadcast publications on. This will also be the port minions&lt;/span&gt;
    &lt;span class="c1"&gt;# connect to to listen for publications.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;publish_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# TODO unknown option!&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;auth_mode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Set the zeromq high water mark on the publisher interface.&lt;/span&gt;
    &lt;span class="c1"&gt;# http://api.zeromq.org/3-2:zmq-setsockopt&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pub_hwm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# ZMQ HWM for SaltEvent pub socket&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;salt_event_pub_hwm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;# ZMQ HWM for EventPublisher pub socket&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;event_publisher_pub_hwm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of MWorker processes for a master to startup. This number needs to scale up as&lt;/span&gt;
    &lt;span class="c1"&gt;# the number of connected minions increases.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;worker_threads&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The port for the master to listen to returns on. The minion needs to connect to this port&lt;/span&gt;
    &lt;span class="c1"&gt;# to send returns.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ret_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of hours to keep jobs around in the job cache on the master&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;keep_jobs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A master-only copy of the file_roots dictionary, used by the state compiler&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_roots&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Add the proxymodule LazyLoader object to opts.  This breaks many things&lt;/span&gt;
    &lt;span class="c1"&gt;# but this was the default pre 2015.8.2.  This should default to&lt;/span&gt;
    &lt;span class="c1"&gt;# False in 2016.3.0&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;add_proxymodule_to_opts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_base&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_branch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_env&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_ssl_verify&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_global_lock&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_insecure_auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_privkey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_pubkey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;git_pillar_passphrase&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_remotes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_mountpoint&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_base&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_insecure_auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_privkey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_pubkey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_passphrase&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_env_whitelist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_env_blacklist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_ssl_verify&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_global_lock&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gitfs_saltenv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;hgfs_remotes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;hgfs_mountpoint&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;hgfs_root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;hgfs_base&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;hgfs_branch_method&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;hgfs_env_whitelist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;hgfs_env_blacklist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;svnfs_remotes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;svnfs_mountpoint&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;svnfs_root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;svnfs_trunk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;svnfs_branches&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;svnfs_tags&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;svnfs_env_whitelist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;svnfs_env_blacklist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;minionfs_env&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;minionfs_mountpoint&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;minionfs_whitelist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;minionfs_blacklist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Specify a list of external pillar systems to use&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ext_pillar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Reserved for future use to version the pillar structure&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pillar_version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Whether or not a copy of the master opts dict should be rendered into minion pillars&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pillar_opts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Cache the master pillar to disk to avoid having to pass through the rendering system&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pillar_cache&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Pillar cache TTL, in seconds. Has no effect unless `pillar_cache` is True&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pillar_cache_ttl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Pillar cache backend. Defaults to `disk` which stores caches in the master cache&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pillar_cache_backend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="s1"&gt;&amp;#39;pillar_safe_render_error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# When creating a pillar, there are several strategies to choose from when&lt;/span&gt;
    &lt;span class="c1"&gt;# encountering duplicate values&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pillar_source_merging_strategy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Recursively merge lists by aggregating them instead of replacing them.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pillar_merge_lists&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# How to merge multiple top files from multiple salt environments&lt;/span&gt;
    &lt;span class="c1"&gt;# (saltenvs); can be &amp;#39;merge&amp;#39; or &amp;#39;same&amp;#39;&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;top_file_merging_strategy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The ordering for salt environment merging, when top_file_merging_strategy&lt;/span&gt;
    &lt;span class="c1"&gt;# is set to &amp;#39;same&amp;#39;&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;env_order&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The salt environment which provides the default top file when&lt;/span&gt;
    &lt;span class="c1"&gt;# top_file_merging_strategy is set to &amp;#39;same&amp;#39;; defaults to &amp;#39;base&amp;#39;&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;default_top&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="s1"&gt;&amp;#39;ping_on_rotate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;peer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;preserve_minion_cache&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;syndic_master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string_types&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

    &lt;span class="c1"&gt;# The behaviour of the multimaster syndic when connection to a master of masters failed. Can&lt;/span&gt;
    &lt;span class="c1"&gt;# specify &amp;#39;random&amp;#39; (default) or &amp;#39;ordered&amp;#39;. If set to &amp;#39;random&amp;#39; masters will be iterated in random&lt;/span&gt;
    &lt;span class="c1"&gt;# order if &amp;#39;ordered&amp;#39; the configured order will be used.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;syndic_failover&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;runner_dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;client_acl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;client_acl_blacklist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;publisher_acl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;publisher_acl_blacklist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;sudo_acl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;external_auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;token_expire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;token_expire_user_override&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;file_recv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;file_recv_max_size&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;file_ignore_regex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string_types&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;file_ignore_glob&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string_types&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;fileserver_backend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;fileserver_followsymlinks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;fileserver_ignoresymlinks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;fileserver_limit_traversal&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of open files a daemon is allowed to have open. Frequently needs to be increased&lt;/span&gt;
    &lt;span class="c1"&gt;# higher than the system default in order to account for the way zeromq consumes file handles.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;max_open_files&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Automatically accept any key provided to the master. Implies that the key will be preserved&lt;/span&gt;
    &lt;span class="c1"&gt;# so that subsequent connections will be authenticated even if this option has later been&lt;/span&gt;
    &lt;span class="c1"&gt;# turned off.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;auto_accept&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;autosign_timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A mapping of external systems that can be used to generate topfile data.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_tops&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A flag that should be set on a top-level master when it is ordering around subordinate masters&lt;/span&gt;
    &lt;span class="c1"&gt;# via the use of a salt syndic&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;order_masters&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Whether or not to cache jobs so that they can be examined later on&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;job_cache&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Define a returner to be used as an external job caching storage backend&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ext_job_cache&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Specify a returner for the master to use as a backend storage system to cache jobs returns&lt;/span&gt;
    &lt;span class="c1"&gt;# that it receives&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_job_cache&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Specify whether the master should store end times for jobs as returns come in&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;job_cache_store_endtime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The minion data cache is a cache of information about the minions stored on the master.&lt;/span&gt;
    &lt;span class="c1"&gt;# This information is primarily the pillar and grains data. The data is cached in the master&lt;/span&gt;
    &lt;span class="c1"&gt;# cachedir under the name of the minion and used to predetermine what minions are expected to&lt;/span&gt;
    &lt;span class="c1"&gt;# reply from executions.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;minion_data_cache&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of seconds between AES key rotations on the master&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;publish_session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Defines a salt reactor. See http://docs.saltstack.com/en/latest/topics/reactor/&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;reactor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The TTL for the cache of the reactor configuration&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;reactor_refresh_interval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of workers for the runner/wheel in the reactor&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;reactor_worker_threads&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The queue size for workers in the reactor&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;reactor_worker_hwm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Defines engines. See https://docs.saltstack.com/en/latest/topics/engines/&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;engines&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="s1"&gt;&amp;#39;serial&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;search&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The update interval, in seconds, for the master maintenance process to update the search&lt;/span&gt;
    &lt;span class="c1"&gt;# index&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;search_index_interval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# A compound target definition. See: http://docs.saltstack.com/en/latest/topics/targeting/nodegroups.html&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;nodegroups&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# List-only nodegroups for salt-ssh. Each group must be formed as either a&lt;/span&gt;
    &lt;span class="c1"&gt;# comma-separated list, or a YAML list.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ssh_list_nodegroups&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# By default, salt-ssh uses its own specially-generated RSA key to auth&lt;/span&gt;
    &lt;span class="c1"&gt;# against minions. If this is set to True, salt-ssh will look in&lt;/span&gt;
    &lt;span class="c1"&gt;# for a key at ~/.ssh/id_rsa, and fall back to using its own specially-&lt;/span&gt;
    &lt;span class="c1"&gt;# generated RSA key if that file doesn&amp;#39;t exist.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ssh_use_home_key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The logfile location for salt-key&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;key_logfile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The source location for the winrepo sls files&lt;/span&gt;
    &lt;span class="c1"&gt;# (used by win_pkg.py, minion only)&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_source_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="s1"&gt;&amp;#39;winrepo_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_dir_ng&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_cachefile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_remotes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_remotes_ng&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_branch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_ssl_verify&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_insecure_auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_privkey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_pubkey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;winrepo_passphrase&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Set a hard limit for the amount of memory modules can consume on a minion.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;modules_max_memory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of minutes between the minion refreshing its cache of grains&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;grains_refresh_every&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Use lspci to gather system data for grains on a minion&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;enable_lspci&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of seconds for the salt client to wait for additional syndics to&lt;/span&gt;
    &lt;span class="c1"&gt;# check in with their lists of expected minions before giving up&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;syndic_wait&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# If this is set to True leading spaces and tabs are stripped from the start&lt;/span&gt;
    &lt;span class="c1"&gt;# of a line to a block.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;jinja_lstrip_blocks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# If this is set to True the first newline after a Jinja block is removed&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;jinja_trim_blocks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Cache minion ID to file&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;minion_id_caching&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# If set, the master will sign all publications before they are sent out&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;sign_pub_messages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The size of key that should be generated when creating new keys&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;keysize&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The transport system for this daemon. (i.e. zeromq, raet, etc)&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;transport&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of seconds to wait when the client is requesting information about running jobs&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;gather_job_timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of seconds to wait before timing out an authentication request&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;auth_timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of attempts to authenticate to a master before giving up&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;auth_tries&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of attempts to connect to a master before giving up.&lt;/span&gt;
    &lt;span class="c1"&gt;# Set this to -1 for unlimited attempts. This allows for a master to have&lt;/span&gt;
    &lt;span class="c1"&gt;# downtime and the minion to reconnect to it later when it comes back up.&lt;/span&gt;
    &lt;span class="c1"&gt;# In &amp;#39;failover&amp;#39; mode, it is the number of attempts for each set of masters.&lt;/span&gt;
    &lt;span class="c1"&gt;# In this mode, it will cycle through the list of masters for each attempt.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;master_tries&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Never give up when trying to authenticate to a master&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;auth_safemode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="s1"&gt;&amp;#39;random_master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# An upper bound for the amount of time for a minion to sleep before attempting to&lt;/span&gt;
    &lt;span class="c1"&gt;# reauth after a restart.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;random_reauth_delay&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The number of seconds for a syndic to poll for new messages that need to be forwarded&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;syndic_event_forward_timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The length that the syndic event queue must hit before events are popped off and forwarded&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;syndic_jid_forward_cache_hwm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="s1"&gt;&amp;#39;ssh_passwd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ssh_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ssh_sudo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ssh_timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ssh_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ssh_scan_ports&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ssh_scan_timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ssh_identities_only&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Enable ioflo verbose logging. Warning! Very verbose!&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ioflo_verbose&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="s1"&gt;&amp;#39;ioflo_period&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Set ioflo to realtime. Useful only for testing/debugging to simulate many ioflo periods very quickly.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ioflo_realtime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Location for ioflo logs&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ioflo_console_logdir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The port to bind to when bringing up a RAET daemon&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;raet_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;raet_alt_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;raet_mutable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;raet_main&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;raet_clear_remotes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;raet_clear_remote_masters&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;raet_road_bufcnt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;raet_lane_bufcnt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;cluster_mode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;cluster_masters&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;sqlite_queue_dir&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="s1"&gt;&amp;#39;queue_dirs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Instructs the minion to ping its master(s) ever n number of seconds. Used&lt;/span&gt;
    &lt;span class="c1"&gt;# primarily as a mitigation technique against minion disconnects.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ping_interval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Instructs the salt CLI to print a summary of a minion responses before returning&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;cli_summary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# The maximum number of minion connections allowed by the master. Can have performance&lt;/span&gt;
    &lt;span class="c1"&gt;# implications in large setups.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;max_minions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Use zmq.SUSCRIBE to limit listening sockets to only process messages bound for them&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;zmq_filtering&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Connection caching. Can greatly speed up salt performance.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;con_cache&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;rotate_aes_key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Cache ZeroMQ connections. Can greatly improve salt performance.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;cache_sreqs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Can be set to override the python_shell=False default in the cmd module&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;cmd_safe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Used strictly for performance testing in RAET.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;dummy_publisher&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Used by salt-api for master requests timeout&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;rest_timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# If set, all minion exec module actions will be rerouted through sudo as this user&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;sudo_user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# HTTP request timeout in seconds. Applied for tornado http fetch functions like cp.get_url should be greater than&lt;/span&gt;
    &lt;span class="c1"&gt;# overall download time.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;http_request_timeout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# HTTP request max file content size.&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;http_max_body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Delay in seconds before executing bootstrap (salt cloud)&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;bootstrap_delay&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# If a proxymodule has a function called &amp;#39;grains&amp;#39;, then call it during&lt;/span&gt;
    &lt;span class="c1"&gt;# regular grains loading and merge the results with the proxy&amp;#39;s grains&lt;/span&gt;
    &lt;span class="c1"&gt;# dictionary.  Otherwise it is assumed that the module calls the grains&lt;/span&gt;
    &lt;span class="c1"&gt;# function in a custom way and returns the data elsewhere&lt;/span&gt;
    &lt;span class="c1"&gt;#&lt;/span&gt;
    &lt;span class="c1"&gt;# Default to False for 2016.3 and Carbon.  Switch to True for Nitrogen&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;proxy_merge_grains_in_module&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Command to use to restart salt-minion&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;minion_restart_command&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# Whether or not a minion should send the results of a command back to the master&lt;/span&gt;
    &lt;span class="c1"&gt;# Useful when a returner is the source of truth for a job result&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pub_ret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="c1"&gt;# HTTP proxy settings. Used in tornado fetch functions, apt-key etc&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;proxy_host&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;proxy_username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;proxy_password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;proxy_port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Salt"></category></entry><entry><title>salt</title><link href="http://www.yilaguan.cc/posts/2016/08/01/salt.html" rel="alternate"></link><published>2016-08-01T00:00:00+08:00</published><author><name>YiHan</name></author><id>tag:www.yilaguan.cc,2016-08-01:posts/2016/08/01/salt.html</id><summary type="html">&lt;p&gt;最近研究salt装我那小一百台服务器, 之前一直是fabric安装的, 感觉salt还是挺好用的, 下面是一些使用到的小脚本&lt;/p&gt;
&lt;h2&gt;salt 常用命令&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;salt &lt;span class="s1"&gt;&amp;#39;xxx*&amp;#39;&lt;/span&gt; state.show_lowstate
salt &lt;span class="s1"&gt;&amp;#39;xxx*&amp;#39;&lt;/span&gt; state.show_highstate
salt &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt; sys.doc state
salt &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt; state.highstate
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;salt formula&lt;/h2&gt;
&lt;p&gt;里头有很多软件安装的模板,通过pillar配置进行安装,需要一些个性化
https://github.com/saltstack-formulas  &lt;/p&gt;
&lt;h2&gt;tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;尽量使用name, 对每个小模块添加一个别名&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;top.sls&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;base:
    &amp;#39;*&amp;#39;:
        - init.env_init
prod:
    &amp;#39;xxx.xxx.xxx.xx&amp;#39;:
        - nginx.service
        - php.install
        - php.php-redis
        - redis.server
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;应用入口文件demo&lt;/h2&gt;
&lt;p&gt;init/env_init.sls&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;include:
    - init.test_file_append
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 文件目录 
├── init
│   ├── env_init.sls
│   └── test_file_append.sls
└── top.sls
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;file.append&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/tmp/abc:
    file.append:
        - text:
            - export ABC=abc
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;file.recurse&lt;/h2&gt;
&lt;p&gt;file_rsync: &lt;br /&gt;
   file.recurse: &lt;br /&gt;
     - source: salt://tools &lt;br /&gt;
     - name: /home/tools &lt;br /&gt;
     - user: nobody &lt;br /&gt;
     - group: nobody &lt;br /&gt;
     - dir_mode: 755 &lt;br /&gt;
     - file_mode: 644 &lt;br /&gt;
     - makedirs: True &lt;br /&gt;
     - backup: minion &lt;br /&gt;
     - include_enpty: True &lt;/p&gt;
&lt;h2&gt;file.managed&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;    file.managed:&lt;/span&gt;
&lt;span class="x"&gt;        - name: /usr/local/src/pcre-8.39.tar.gz&lt;/span&gt;
&lt;span class="x"&gt;        - source: salt://pcre/files/pcre-8.39.tar.gz&lt;/span&gt;
&lt;span class="x"&gt;        - source_hash: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;checksum&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        - user: root&lt;/span&gt;
&lt;span class="x"&gt;        - group: root&lt;/span&gt;
&lt;span class="x"&gt;        - mode: 755&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 jinja="jinja"&gt;file.managed&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;redis-init-script:&lt;/span&gt;
&lt;span class="x"&gt;  file.managed:&lt;/span&gt;
&lt;span class="x"&gt;    - name: /etc/init.d/redis-server&lt;/span&gt;
&lt;span class="x"&gt;    - template: jinja&lt;/span&gt;
&lt;span class="x"&gt;    - source: salt://redis/files/redis-init.jinja&lt;/span&gt;
&lt;span class="x"&gt;    - mode: 0750&lt;/span&gt;
&lt;span class="x"&gt;    - user: root&lt;/span&gt;
&lt;span class="x"&gt;    - group: root&lt;/span&gt;
&lt;span class="x"&gt;    - context:&lt;/span&gt;
&lt;span class="x"&gt;        conf: /etc/redis/redis.conf&lt;/span&gt;
&lt;span class="x"&gt;        redis_user: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        exec: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;bin&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;        pidfile: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;pidfile&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    - require:&lt;/span&gt;
&lt;span class="x"&gt;      - sls: redis.common&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;cmd.run&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    cmd.run:
        - name: cd /usr/local/src &amp;amp;&amp;amp; tar zxf pcre-8.39.tar.gz &amp;amp;&amp;amp; cd pcre-8.39 &amp;amp;&amp;amp; ./configure --prefix=/usr/local/pcre &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
        - unless: test -d /usr/local/pcre
        - require:
          - file: pcre-source-install
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;cmd.wait&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;make-and-install-redis:&lt;/span&gt;
&lt;span class="x"&gt;  cmd.wait:&lt;/span&gt;
&lt;span class="x"&gt;    - cwd: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;root&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/redis-&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;version&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    - names:&lt;/span&gt;
&lt;span class="x"&gt;      - make&lt;/span&gt;
&lt;span class="x"&gt;      - make install&lt;/span&gt;
&lt;span class="x"&gt;      - cp &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;root&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/redis-&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;version&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/src/redis-cli &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;bin_dir&lt;/span&gt;  &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/&lt;/span&gt;
&lt;span class="x"&gt;      - cp &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;root&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/redis-&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;version&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/src/redis-server &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;bin_dir&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/&lt;/span&gt;
&lt;span class="x"&gt;    - watch:&lt;/span&gt;
&lt;span class="x"&gt;      - cmd: get-redis&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;file.directoy&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    file.directory:
        - name: /tmp/abc/
        - user: root
        - group: root
        - dir_mode: 755
        - makedirs: True
        - require:
            - cmd: xxxx
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;service.running&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    service.running:
        - name: nginx
        - enable: True
        - reload: True
        - require:
            - cmd: nginx-init
        - watch:
            - file: /usr/local/nginx/conf/nginx.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;pkg.installed&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    pkg.installed:
        - names:
            - openssl-devel
            - swig
            - libjpeg-turbo
            - libjpeg-turbo-devel
            - libpng
            - libpng-devel
            - freetype
            - freetype-devel
            - libxml2
            - libxml2-devel
            - zlib
            - zlib-devel
            - libcurl
            - libcurl-devel
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;user.present, group.present&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nobody-user-group:
    group.present:
        - name: nobody
        - gid: 99
    user.present:
        - name: nobody
        - shell: /sbin/nologin
        - uid: 99
        - gid: 99
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;file.symlink&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;rabbitmq_binary_tool_plugins&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;symlink&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/usr/local/bin/&lt;/span&gt;&lt;span class="n"&gt;rabbitmq&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/usr/lib/rabbitmq/bin/&lt;/span&gt;&lt;span class="n"&gt;rabbitmq&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;require&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rabbitmq&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rabbitmq_binary_tool_env&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;pkgrepo.managed&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;rabbitmq_repo&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;pkgrepo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;managed&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;humanname&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RabbitMQ&lt;/span&gt; &lt;span class="n"&gt;Packagecloud&lt;/span&gt; &lt;span class="n"&gt;Repository&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;packagecloud&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;io&lt;/span&gt;&lt;span class="sr"&gt;/rabbitmq/rabbitmq-server/el/6/&lt;/span&gt;&lt;span class="n"&gt;$basearch&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;packagecloud&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;io&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;key&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sslverify&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sslcacert&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/etc/pki/tls/certs/&lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bundle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;crt&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;require_in&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rabbitmq&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;module.run&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;nginx_user_&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;:&lt;/span&gt;
&lt;span class="x"&gt;  module.run:&lt;/span&gt;
&lt;span class="x"&gt;    - name: basicauth.adduser&lt;/span&gt;
&lt;span class="x"&gt;    - user: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    - passwd: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;webauth&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    - path: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;htauth&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    - require:&lt;/span&gt;
&lt;span class="x"&gt;      - pkg: htpasswd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;test.check_pillar&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git-sls-is-pillar-present:
  test.check_pillar:
    - present:
        - git_url
        - git_archive_dir
        - git_resp_base_dir
        - git_tag_name
        - dir_name
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;state.orchestrate_high&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;salt-run state.orchestrate_high &amp;#39;{
    stage_one:
        {salt.state: [{tgt: &amp;quot;db*&amp;quot;}, {sls: postgres_setup}]},
    stage_two:
        {salt.state: [{tgt: &amp;quot;web*&amp;quot;}, {sls: apache_setup}, {
            require: [{salt: stage_one}],
        }]},
    }&amp;#39;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Salt"></category></entry><entry><title>salt安装</title><link href="http://www.yilaguan.cc/posts/2016/08/01/saltan-zhuang.html" rel="alternate"></link><published>2016-08-01T00:00:00+08:00</published><author><name>YiHan</name></author><id>tag:www.yilaguan.cc,2016-08-01:posts/2016/08/01/saltan-zhuang.html</id><summary type="html">&lt;p&gt;最近研究salt装我那小一百台服务器, 之前一直是fabric安装的, 感觉salt还是挺好用的。python 安装还是习惯使用pip安装。 &lt;/p&gt;
&lt;h2&gt;PIP 配置,指向豆瓣源&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat ~/.pip/pip.conf

[global]
index-url = http://pypi.douban.com/simple

[install]
trusted-host = pypi.douban.com
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置master&lt;/h2&gt;
&lt;p&gt;master 主要配置file_roots, pillar_roots, &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;external_auth&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;pam&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;salt&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;.*&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;@runner&amp;#39;&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;@wheel&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;file_recv&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;file_recv_max_size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;

&lt;span class="n"&gt;file_roots&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
   &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
     &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sr"&gt;/srv/salt/&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;
   &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
     &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sr"&gt;/srv/salt/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
     &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sr"&gt;/srv/formulas/&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;formula&lt;/span&gt;
   &lt;span class="n"&gt;prod&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
     &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sr"&gt;/srv/salt/&lt;/span&gt;&lt;span class="n"&gt;prod&lt;/span&gt;
     &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sr"&gt;/srv/formulas/&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;formula&lt;/span&gt;

&lt;span class="n"&gt;pillar_roots&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sr"&gt;/srv/pillar/&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;
  &lt;span class="n"&gt;prod&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sr"&gt;/srv/pillar/&lt;/span&gt;&lt;span class="n"&gt;prod&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;配置minion&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /etc/salt/minion

master: 10.1.1.1
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /etc/salt/minion_id

hostname.x.x.x
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;设置init.d 文件, 并开机启动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chkconfig salt-minion on
chkconfig salt-master on
service salt-minion restart
service salt-master restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;/etc/init.d/salt-master&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Salt master&lt;/span&gt;
&lt;span class="c1"&gt;###################################&lt;/span&gt;

&lt;span class="c1"&gt;# LSB header&lt;/span&gt;

&lt;span class="c1"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="c1"&gt;# Provides:          salt-master&lt;/span&gt;
&lt;span class="c1"&gt;# Required-Start:    $all&lt;/span&gt;
&lt;span class="c1"&gt;# Required-Stop:&lt;/span&gt;
&lt;span class="c1"&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
&lt;span class="c1"&gt;# Default-Stop:      0 1 6&lt;/span&gt;
&lt;span class="c1"&gt;# Short-Description: Salt master control daemon&lt;/span&gt;
&lt;span class="c1"&gt;# Description:       This is a daemon that controls the Salt minions.&lt;/span&gt;
&lt;span class="c1"&gt;### END INIT INFO&lt;/span&gt;


&lt;span class="c1"&gt;# chkconfig header&lt;/span&gt;

&lt;span class="c1"&gt;# chkconfig: 345 96 05&lt;/span&gt;
&lt;span class="c1"&gt;# description:  This is a daemon that controls the Salt minions&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# processname: /usr/bin/salt-master&lt;/span&gt;


&lt;span class="nv"&gt;DEBIAN_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/debian_version
&lt;span class="nv"&gt;SUSE_RELEASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/SuSE-release
&lt;span class="c1"&gt;# Source function library.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$DEBIAN_VERSION&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
   &lt;span class="nb"&gt;break&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$SUSE_RELEASE&lt;/span&gt; -a -r /etc/rc.status &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    . /etc/rc.status
&lt;span class="k"&gt;else&lt;/span&gt;
    . /etc/rc.d/init.d/functions
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# Default values (can be overridden below)&lt;/span&gt;
&lt;span class="nv"&gt;SALTMASTER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/salt-master
&lt;span class="nv"&gt;PYTHON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/python2.6
&lt;span class="nv"&gt;MASTER_ARGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f /etc/default/salt &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    . /etc/default/salt
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nv"&gt;SERVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;salt-master
&lt;span class="nv"&gt;PROCESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;salt-master

&lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0

start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;$&amp;quot;Starting salt-master daemon: &amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$SUSE_RELEASE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        startproc -f -p /var/run/&lt;span class="nv"&gt;$SERVICE&lt;/span&gt;.pid &lt;span class="nv"&gt;$SALTMASTER&lt;/span&gt; -d &lt;span class="nv"&gt;$MASTER_ARGS&lt;/span&gt;
        rc_status -v
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e &lt;span class="nv"&gt;$DEBIAN_VERSION&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$LOCKFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;already started, lock file found&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nv"&gt;$PYTHON&lt;/span&gt; &lt;span class="nv"&gt;$SALTMASTER&lt;/span&gt; -d &lt;span class="nv"&gt;$MASTER_ARGS&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt; /dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
        &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        daemon --check &lt;span class="nv"&gt;$SERVICE&lt;/span&gt; &lt;span class="nv"&gt;$SALTMASTER&lt;/span&gt; -d &lt;span class="nv"&gt;$MASTER_ARGS&lt;/span&gt;
        &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch /var/lock/subsys/&lt;span class="nv"&gt;$SERVICE&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;$&amp;quot;Stopping salt-master daemon: &amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$SUSE_RELEASE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        killproc -TERM &lt;span class="nv"&gt;$SALTMASTER&lt;/span&gt;
        rc_status -v
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$DEBIAN_VERSION&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="c1"&gt;# Added this since Debian&amp;#39;s start-stop-daemon doesn&amp;#39;t support spawned processes&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; ps -ef &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PYTHON&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$SALTMASTER&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -v grep &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs &lt;span class="nb"&gt;kill&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt; /dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Daemon is not started&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
        &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        killproc &lt;span class="nv"&gt;$PROCESS&lt;/span&gt;
        &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f /var/lock/subsys/&lt;span class="nv"&gt;$SERVICE&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

restart&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   stop
   start
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# See how we were called.&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in
    start&lt;span class="p"&gt;|&lt;/span&gt;stop&lt;span class="p"&gt;|&lt;/span&gt;restart&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$1&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
    status&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$SUSE_RELEASE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Checking for service salt-master &amp;quot;&lt;/span&gt;
            checkproc &lt;span class="nv"&gt;$SALTMASTER&lt;/span&gt;
            rc_status -v
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$DEBIAN_VERSION&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$LOCKFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
                &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;salt-master is running.&amp;quot;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;salt-master is stopped.&amp;quot;&lt;/span&gt;
            &lt;span class="k"&gt;fi&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            status &lt;span class="nv"&gt;$PROCESS&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
    condrestart&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$LOCKFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; restart &lt;span class="o"&gt;||&lt;/span&gt; :
        &lt;span class="p"&gt;;;&lt;/span&gt;
    reload&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;can&amp;#39;t reload configuration, you have to restart it&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
        &lt;span class="p"&gt;;;&lt;/span&gt;
    *&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; $&lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|status|restart|condrestart|reload}&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;exit&lt;/span&gt; 1
        &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;/etc/init.d/salt-minion&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Salt minion&lt;/span&gt;
&lt;span class="c1"&gt;###################################&lt;/span&gt;

&lt;span class="c1"&gt;# LSB header&lt;/span&gt;

&lt;span class="c1"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="c1"&gt;# Provides:          salt-minion&lt;/span&gt;
&lt;span class="c1"&gt;# Required-Start:    $all&lt;/span&gt;
&lt;span class="c1"&gt;# Required-Stop:&lt;/span&gt;
&lt;span class="c1"&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
&lt;span class="c1"&gt;# Default-Stop:      0 1 6&lt;/span&gt;
&lt;span class="c1"&gt;# Short-Description: Salt minion daemon&lt;/span&gt;
&lt;span class="c1"&gt;# Description:       This is the Salt minion daemon that can be controlled by the&lt;/span&gt;
&lt;span class="c1"&gt;#                    Salt master.&lt;/span&gt;
&lt;span class="c1"&gt;### END INIT INFO&lt;/span&gt;


&lt;span class="c1"&gt;# chkconfig header&lt;/span&gt;

&lt;span class="c1"&gt;# chkconfig: 345 97 04&lt;/span&gt;
&lt;span class="c1"&gt;# description:  This is the Salt minion daemon that can be controlled by the Salt master.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# processname: /usr/bin/salt-minion&lt;/span&gt;


&lt;span class="nv"&gt;DEBIAN_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/debian_version
&lt;span class="nv"&gt;SUSE_RELEASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/SuSE-release
&lt;span class="c1"&gt;# Source function library.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$DEBIAN_VERSION&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
   &lt;span class="nb"&gt;break&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$SUSE_RELEASE&lt;/span&gt; -a -r /etc/rc.status &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    . /etc/rc.status
&lt;span class="k"&gt;else&lt;/span&gt;
    . /etc/rc.d/init.d/functions
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# Default values (can be overridden below)&lt;/span&gt;
&lt;span class="nv"&gt;SALTMINION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/salt-minion
&lt;span class="nv"&gt;PYTHON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/python2.6
&lt;span class="nv"&gt;MINION_ARGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f /etc/default/salt &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    . /etc/default/salt
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nv"&gt;SERVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;salt-minion
&lt;span class="nv"&gt;PROCESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;salt-minion

&lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0

start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;$&amp;quot;Starting salt-minion daemon: &amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$SUSE_RELEASE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        startproc -f -p /var/run/&lt;span class="nv"&gt;$SERVICE&lt;/span&gt;.pid &lt;span class="nv"&gt;$SALTMINION&lt;/span&gt; -d &lt;span class="nv"&gt;$MINION_ARGS&lt;/span&gt;
        rc_status -v
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e &lt;span class="nv"&gt;$DEBIAN_VERSION&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$LOCKFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;already started, lock file found&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nv"&gt;$PYTHON&lt;/span&gt; &lt;span class="nv"&gt;$SALTMINION&lt;/span&gt; -d &lt;span class="nv"&gt;$MINION_ARGS&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt; /dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
        &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; ! -z &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;pidofproc -p /var/run/&lt;span class="nv"&gt;$SERVICE&lt;/span&gt;.pid &lt;span class="nv"&gt;$PROCESS&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;already running&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            daemon --check &lt;span class="nv"&gt;$SERVICE&lt;/span&gt; &lt;span class="nv"&gt;$SALTMINION&lt;/span&gt; -d &lt;span class="nv"&gt;$MINION_ARGS&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
            &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch /var/lock/subsys/&lt;span class="nv"&gt;$SERVICE&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;$&amp;quot;Stopping salt-minion daemon: &amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$SUSE_RELEASE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        killproc -TERM &lt;span class="nv"&gt;$SALTMINION&lt;/span&gt;
        rc_status -v
        &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$DEBIAN_VERSION&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="c1"&gt;# Added this since Debian&amp;#39;s start-stop-daemon doesn&amp;#39;t support spawned processes&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; ps -ef &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PYTHON&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$SALTMINION&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -v grep &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs &lt;span class="nb"&gt;kill&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt; /dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Daemon is not started&amp;quot;&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
        &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        killproc &lt;span class="nv"&gt;$PROCESS&lt;/span&gt;
        &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f /var/lock/subsys/&lt;span class="nv"&gt;$SERVICE&lt;/span&gt;
        &lt;span class="c1"&gt;# tidy up any rogue processes:&lt;/span&gt;
        &lt;span class="nv"&gt;PROCS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;ps -ef &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$SALTMINION&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -v grep &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PROCS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nb"&gt;kill&lt;/span&gt; &lt;span class="nv"&gt;$PROCS&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt; /dev/null
            sleep 1
            &lt;span class="nv"&gt;PROCS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;ps -ef &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$SALTMINION&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -v grep &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PROCS&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
                &lt;span class="nb"&gt;kill&lt;/span&gt; -9 &lt;span class="nv"&gt;$PROCS&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt; /dev/null
            &lt;span class="k"&gt;fi&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

restart&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   stop
   start
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# See how we were called.&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in
    start&lt;span class="p"&gt;|&lt;/span&gt;stop&lt;span class="p"&gt;|&lt;/span&gt;restart&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$1&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
    status&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$SUSE_RELEASE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Checking for service salt-minion &amp;quot;&lt;/span&gt;
            checkproc &lt;span class="nv"&gt;$SALTMINION&lt;/span&gt;
            rc_status -v
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$DEBIAN_VERSION&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$LOCKFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
                &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;salt-minion is running.&amp;quot;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;salt-minion is stopped.&amp;quot;&lt;/span&gt;
            &lt;span class="k"&gt;fi&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            status &lt;span class="nv"&gt;$PROCESS&lt;/span&gt;
            &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
    condrestart&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$LOCKFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; restart &lt;span class="o"&gt;||&lt;/span&gt; :
        &lt;span class="p"&gt;;;&lt;/span&gt;
    reload&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;can&amp;#39;t reload configuration, you have to restart it&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
        &lt;span class="p"&gt;;;&lt;/span&gt;
    *&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; $&lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|status|restart|condrestart|reload}&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;exit&lt;/span&gt; 1
        &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="nv"&gt;$RETVAL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="Salt"></category></entry><entry><title>salt配置</title><link href="http://www.yilaguan.cc/posts/2016/08/01/saltpei-zhi.html" rel="alternate"></link><published>2016-08-01T00:00:00+08:00</published><author><name>YiHan</name></author><id>tag:www.yilaguan.cc,2016-08-01:posts/2016/08/01/saltpei-zhi.html</id><summary type="html">&lt;h2&gt;master配置&lt;/h2&gt;
&lt;p&gt;master 主要配置file_roots, pillar_roots, &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# pam权限配置, 使用linux用户名密码进行登录
external_auth:
  pam:
    salt:
        - .*
        - &amp;#39;@runner&amp;#39;
        - &amp;#39;@wheel&amp;#39;

# master 是否可以接收minion文件,线上最好设置为False
file_recv: True
file_recv_max_size: 1000

# 文件目录
file_roots:
   base:
     - /srv/salt/base
   dev:
     - /srv/salt/dev
   prod:
     - /srv/salt/prod
     - /srv/formulas/redis-formula

# pillar 文件目录,与fie_roots对应
pillar_roots:
  base:
    - /srv/pillar/base
  prod:
    - /srv/pillar/prod
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;salt 文件结构&lt;/h2&gt;
&lt;p&gt;目前使用多env结构。如nginx目录如下: files 存放源码, 通用配置文件, service init.d 脚本, map.jinja 存放相关跨平台mapping,如果有需要,可以merge pillar相关配置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;├── base
│   ├── init
│   │   ├── env_init.sls
│   │   ├── files
│   │   └── test_file_append.sls
│   └── top.sls
└── prod
    ├── nginx
    │   ├── files
    │   │   ├── nginx-1.8.1.tar.gz
    │   │   ├── nginx.conf
    │   │   └── nginx-init
    │   ├── install.sls
    │   ├── service.sls
    │   └── map.jinja
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;top.sls 结构&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;base:
    &amp;#39;*&amp;#39;:
        - init.env_init
prod:
    &amp;#39;xxxx&amp;#39;:
        - nginx.service
        - php.install
        - php.php-redis
        - redis.server
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;minion配置&lt;/h2&gt;
&lt;p&gt;如果使用mysql作为result, 需要设置mysql相关内容,并手工生成相关表&lt;br /&gt;
https://docs.saltstack.com/en/latest/ref/returners/all/salt.returners.mysql.html#module-salt.returners.mysql  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat /etc/salt/minion

master: 10.1.1.1
mysql.host: &amp;#39;1.1.1.1&amp;#39;
mysql.user: &amp;#39;yihan&amp;#39;
mysql.pass: &amp;#39;password123!&amp;#39;
mysql.db: &amp;#39;salt&amp;#39;
mysql.port: 3306

cat /etc/salt/minion_id

hostname.x.x.x
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Salt"></category></entry></feed>